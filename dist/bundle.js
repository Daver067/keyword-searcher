(()=>{"use strict";var e={192:(e,n,t)=>{t.d(n,{Z:()=>a});var o=t(537),r=t.n(o),A=t(645),i=t.n(A)()(r());i.push([e.id,".moduleBackground{display:flex;justify-content:center;align-items:center;flex-direction:row;position:absolute;top:0;left:0;width:100vw;height:100vh;background-color:rgba(0,0,0,.5)}.module{font-size:larger;background-color:#fff;height:75vh;width:75vw;color:#000;padding:10px;line-height:2rem}.module div{display:block}.module div label{display:block}.module div input{height:1.75rem;width:80%;margin-bottom:2rem}.module div textarea{padding:5px;resize:none;width:calc(100% - 10px);height:20rem}.module div button{width:10rem;padding:1rem;margin-top:2rem}.module .buttons{display:flex;justify-content:space-evenly;align-items:center}.module-search{font-size:larger;background-color:#fff;height:75vh;width:75vw;color:#000;padding:10px;line-height:2rem}.module-search textarea{padding:5px;resize:none;height:80%;width:100%}.module-search button{width:10rem;padding:1rem;margin-top:2rem}.module-search .buttons{display:flex;justify-content:space-evenly;align-items:center}*{box-sizing:border-box;margin:0;padding:0}header{display:flex;justify-content:center;align-items:center;flex-direction:row;position:relative;top:0;left:0;width:100vw;min-height:10vh;background-color:#b8b6b6;font-size:xx-large;font-weight:700}#display{position:relative;width:100vw;min-height:85vh;background-color:#faebd7}.footer{display:flex;justify-content:center;align-items:center;flex-direction:row;position:relative;bottom:0;left:0;width:100vw;height:5vh;background-color:#000;color:#fff;font-weight:300;font-size:x-small}.commandBtns{display:flex;justify-content:space-evenly}.commandBtns .moduleBtn{height:3rem;font-size:medium;padding:5px 10px;margin:10px}.keywordsToSearch{padding-left:8px;line-height:1.5}.docToSearch{padding-left:8px;line-height:1.5}.resultBtnDiv{display:flex;align-content:center;justify-content:center}.resultBtnDiv .resultBtn{height:3rem;font-size:medium;padding:5px 10px;margin:10px}.resultBtnDiv .resultBtn button{margin:auto}.resultsParagraphDiv{display:flex;justify-content:space-evenly;margin-bottom:25px}.resultsParagraphDiv .resultsParagraphKeywords{white-space:pre;line-height:1.5;padding-left:15px}.resultsParagraphDiv .resultsParagraphNumbers{white-space:pre;line-height:1.5;padding-left:15px}","",{version:3,sources:["webpack://./src/scss/_keywordModule.scss","webpack://./src/scss/_variablesAndFunctions.scss","webpack://./src/scss/_searchModule.scss","webpack://./src/style.scss"],names:[],mappings:"AAEA,kBCCE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBDHoB,CACpB,iBAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,YAAA,CACA,+BAAA,CAGF,QACE,gBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CACA,YACE,aAAA,CACA,kBACE,aAAA,CAEF,kBACE,cAAA,CACA,SAAA,CACA,kBAAA,CAEF,qBACE,WAAA,CACA,WAAA,CACA,uBAAA,CACA,YAAA,CAEF,mBACE,WAAA,CACA,YAAA,CACA,eAAA,CAGJ,iBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CE3CJ,eACE,gBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CACA,wBACE,WAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CAEF,sBACE,WAAA,CACA,YAAA,CACA,eAAA,CAEF,wBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CCrBJ,EACE,qBAAA,CACA,QAAA,CACA,SAAA,CAGF,OFNE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBEIoB,CACpB,iBAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,eAAA,CACA,wBAAA,CACA,kBAAA,CACA,eAAA,CAGF,SACE,iBAAA,CACA,WAAA,CACA,eAAA,CACA,wBAAA,CAGF,QFzBE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBEuBoB,CACpB,iBAAA,CACA,QAAA,CACA,MAAA,CACA,WAAA,CACA,UAAA,CACA,qBFnCiB,CEoCjB,UAAA,CACA,eAAA,CACA,iBAAA,CAGF,aACE,YAAA,CACA,4BAAA,CAEA,wBACE,WAAA,CACA,gBAAA,CACA,gBAAA,CACA,WAAA,CAGJ,kBACE,gBAAA,CACA,eAAA,CAGF,aACE,gBAAA,CACA,eAAA,CAGF,cACE,YAAA,CACA,oBAAA,CACA,sBAAA,CACA,yBACE,WAAA,CACA,gBAAA,CACA,gBAAA,CACA,WAAA,CACA,gCACE,WAAA,CAIN,qBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CACA,+CACE,eAAA,CACA,eAAA,CACA,iBAAA,CAGF,8CACE,eAAA,CACA,eAAA,CACA,iBAAA",sourcesContent:['@import "./variablesAndFunctions";\n\n.moduleBackground {\n  @include flexCenter(row);\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.module {\n  font-size: larger;\n  background-color: white;\n  height: 75vh;\n  width: 75vw;\n  color: black;\n  padding: 10px;\n  line-height: 2rem;\n  div {\n    display: block;\n    label {\n      display: block;\n    }\n    input {\n      height: 1.75rem;\n      width: 80%;\n      margin-bottom: 2rem;\n    }\n    textarea {\n      padding: 5px;\n      resize: none;\n      width: calc(100% - 10px);\n      height: 20rem;\n    }\n    button {\n      width: 10rem;\n      padding: 1rem;\n      margin-top: 2rem;\n    }\n  }\n  .buttons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n','$footerBackground: black;\n\n@mixin flexCenter($direction) {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: $direction;\n}\n\n$font-weights: (\n  "light": 300,\n  "regular": 400,\n  "medium": 500,\n  "bold": 700,\n);\n\n@function weight($weight-name) {\n  @return map-get($map: $font-weights, $key: $weight-name);\n}\n','@import "./variablesAndFunctions";\n\n.module-search {\n  font-size: larger;\n  background-color: white;\n  height: 75vh;\n  width: 75vw;\n  color: black;\n  padding: 10px;\n  line-height: 2rem;\n  textarea {\n    padding: 5px;\n    resize: none;\n    height: 80%;\n    width: 100%;\n  }\n  button {\n    width: 10rem;\n    padding: 1rem;\n    margin-top: 2rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n','@import "./scss/keywordModule";\n@import "./scss/variablesAndFunctions";\n@import "./scss/searchModule";\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nheader {\n  @include flexCenter(row);\n  position: relative;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  min-height: 10vh;\n  background-color: rgb(184, 182, 182);\n  font-size: xx-large;\n  font-weight: weight(bold);\n}\n\n#display {\n  position: relative;\n  width: 100vw;\n  min-height: 85vh;\n  background-color: antiquewhite;\n}\n\n.footer {\n  @include flexCenter(row);\n  position: relative;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  height: 5vh;\n  background-color: $footerBackground;\n  color: white;\n  font-weight: weight(light);\n  font-size: x-small;\n}\n\n.commandBtns {\n  display: flex;\n  justify-content: space-evenly;\n\n  .moduleBtn {\n    height: 3rem;\n    font-size: medium;\n    padding: 5px 10px;\n    margin: 10px;\n  }\n}\n.keywordsToSearch {\n  padding-left: 8px;\n  line-height: 1.5;\n}\n\n.docToSearch {\n  padding-left: 8px;\n  line-height: 1.5;\n}\n\n.resultBtnDiv {\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  .resultBtn {\n    height: 3rem;\n    font-size: medium;\n    padding: 5px 10px;\n    margin: 10px;\n    button {\n      margin: auto;\n    }\n  }\n}\n.resultsParagraphDiv {\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 25px;\n  .resultsParagraphKeywords {\n    white-space: pre;\n    line-height: 1.5;\n    padding-left: 15px;\n  }\n\n  .resultsParagraphNumbers {\n    white-space: pre;\n    line-height: 1.5;\n    padding-left: 15px;\n  }\n}\n'],sourceRoot:""}]);const a=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,A){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(i[c]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);o&&i[d[0]]||(void 0!==A&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=A),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),A="/*# ".concat(r," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([A]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var A={},i=[],a=0;a<e.length;a++){var c=e[a],s=o.base?c[0]+o.base:c[0],d=A[s]||0,l="".concat(s," ").concat(d);A[s]=d+1;var u=t(l),C={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(C);else{var p=r(C,o);o.byIndex=a,n.splice(a,0,{identifier:l,updater:p,references:1})}i.push(l)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var A=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<A.length;i++){var a=t(A[i]);n[a].references--}for(var c=o(e,r),s=0;s<A.length;s++){var d=t(A[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}A=c}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var A=n[o]={id:o,exports:{}};return e[o](A,A.exports,t),A.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;var o={};(()=>{t.d(o,{v:()=>T});var e=t(379),n=t.n(e),r=t(795),A=t.n(r),i=t(569),a=t.n(i),c=t(565),s=t.n(c),d=t(216),l=t.n(d),u=t(589),C=t.n(u),p=t(192),h={};h.styleTagTransform=C(),h.setAttributes=s(),h.insert=a().bind(null,"head"),h.domAPI=A(),h.insertStyleElement=l(),n()(p.Z,h),p.Z&&p.Z.locals&&p.Z.locals;class m{constructor(e){this.keyword=e,this.numberOfMatches=null}get name(){return this.keyword}set matches(e){null===e&&(e=0),this.numberOfMatches=e}get matches(){return this.numberOfMatches}get matchString(){return`${this.keyword} was matched ${this.numberOfMatches} times in the article`}}let f=[];const g=document.querySelector("body"),v=document.querySelector(".mainKeywords");function y(e){const n=T("button");return n.id=`module${e}`,n.textContent=`${e}`,n}function b(){const e=document.getElementById("keywords").value;f=e.split("\n"),function(e){for(let n=0;n<e.length;n++){let t=/[a-z]|[A-Z]/;e[n].match(t)||(e.splice(n,1),n--)}}(f),f=function(e){const n=[];return e.forEach((e=>{const t=new m(e);n.push(t)})),n}(f),v.textContent=function(e){let n=[];return e.forEach((e=>{n.push(` ${e.keyword}`)})),n}(f),w()}function w(){const e=document.querySelector(".moduleBackground");g.removeChild(e)}const x=document.querySelector("body"),B=document.querySelector(".mainSearchText");let k="";function E(e){const n=T("button");return n.id=`module${e}`,n.textContent=`${e}`,n}function S(){const e=document.querySelector(".moduleBackground");x.removeChild(e)}function j(){k="";const e=document.getElementById("search").value;k=e,B.textContent=k,S()}function F(e){let n,t=Array.isArray(e)?[]:{};for(const o in e)n=e[o],t[o]="object"==typeof n?F(n):n;return t}function M(e){let n=F(e),t=0;return e.forEach((o=>{if(null!==o){for(let r=0;r<e.length;r++)if(null!==e[r]&&o[0]!==e[r][0]&&new RegExp(`${o[0]}`,"gmi").test(e[r][0])){let o=e[r].length;n[t].splice(0,o)}t++}})),n}function z(){!function(){const e=[];f.forEach((n=>{const t=new RegExp(`${n.keyword}`,"gmi"),o=k.match(t);e.push(o)}));let n=M(e);(function(e){let n=0;f.forEach((t=>{void 0===e[n].length?t.matches=0:t.matches=e[n].length,n++}))})(n)}();const e=["Keyword Used"],n=["Number of Times Used"];f.forEach((t=>{e.push(t.name),n.push(t.matches)})),document.querySelector(".resultsParagraphKeywords").textContent=e.join("\r\n"),document.querySelector(".resultsParagraphNumbers").textContent=n.join("\r\n")}document.getElementById("display");const $=document.querySelector(".commandBtns");function q(){!function(){const e=T("div","moduleBackground",""),n=T("div","module",'<div><label for="companyName">Company Name:</label><input type="text" name="companyName" id="companyName"></div><div><label for="keywords">Enter keywords, separated by line break (press enter)</label><textarea name="keywords"id="keywords"placeholder="keyword one &#10keyword two &#10keyword three &#10etc.."></textarea></div>'),t=T("div","buttons","");t.appendChild(function(){const e=y("Ok");return e.addEventListener("click",b),e}()),t.appendChild(function(){const e=y("Cancel");return e.addEventListener("click",w),e}()),n.appendChild(t),e.appendChild(n),g.appendChild(e)}()}function W(){!function(){const e=T("div","moduleBackground",""),n=T("div","module-search",'<textarea name="search" id="search" placeholder="paste document to search in here and press OK"></textarea>'),t=T("div","buttons","");t.appendChild(function(){const e=E("Ok");return e.addEventListener("click",j),e}()),t.appendChild(function(){const e=E("Cancel");return e.addEventListener("click",S),e}()),n.appendChild(t),e.appendChild(n),x.appendChild(e)}()}function T(e,n,t){const o=document.createElement(e);return o.classList.add(n),o.innerHTML=t,o}!function(){const e=T("button","moduleBtn","Click me to add keywords!");e.addEventListener("click",q),$.appendChild(e)}(),function(){const e=T("button","moduleBtn","Click me to add text to search!");e.addEventListener("click",W),$.appendChild(e)}(),function(){const e=T("button","resultBtn","Click me for the results!");e.addEventListener("click",z),document.querySelector(".resultBtnDiv").appendChild(e)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,