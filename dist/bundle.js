(()=>{"use strict";var e={192:(e,n,t)=>{t.d(n,{Z:()=>a});var A=t(537),o=t.n(A),r=t(645),i=t.n(r)()(o());i.push([e.id,".moduleBackground{display:flex;justify-content:center;align-items:center;flex-direction:row;position:absolute;top:0;left:0;width:100vw;height:100vh;background-color:rgba(0,0,0,.5)}.module{font-size:larger;background-color:#fff;height:75vh;width:75vw;color:#000;padding:10px;line-height:2rem}.module div{display:block}.module div label{display:block}.module div input{height:1.75rem;width:80%;margin-bottom:2rem}.module div textarea{padding:5px;resize:none;width:calc(100% - 10px);height:20rem}.module div button{width:10rem;padding:1rem;margin-top:2rem}.module .buttons{display:flex;justify-content:space-evenly;align-items:center}.module-search{font-size:larger;background-color:#fff;height:75vh;width:75vw;color:#000;padding:10px;line-height:2rem}.module-search textarea{padding:5px;resize:none;height:80%;width:100%}.module-search button{width:10rem;padding:1rem;margin-top:2rem}.module-search .buttons{display:flex;justify-content:space-evenly;align-items:center}.module-meta{font-size:larger;background-color:#fff;height:75vh;width:75vw;color:#000;padding:10px;line-height:2rem}.module-meta textarea{padding:5px;resize:none;height:80%;width:100%}.module-meta button{width:10rem;padding:1rem;margin-top:2rem}.module-meta .buttons{display:flex;justify-content:space-evenly;align-items:center}*{box-sizing:border-box;margin:0;padding:0}header{display:flex;justify-content:center;align-items:center;flex-direction:row;position:relative;top:0;left:0;width:100vw;min-height:10vh;background-color:#b8b6b6;font-size:xx-large;font-weight:700}#display{position:relative;width:100vw;min-height:85vh;background-color:#faebd7}.footer{display:flex;justify-content:center;align-items:center;flex-direction:row;position:relative;bottom:0;left:0;width:100vw;height:5vh;background-color:#000;color:#fff;font-weight:300;font-size:x-small}.commandBtns{display:flex;justify-content:space-evenly}.commandBtns .moduleBtn{height:3rem;font-size:medium;padding:5px 10px;margin:10px}.companyName{padding:10px;line-height:1.5}.keywordsToSearch{padding:10px;line-height:1.5}.docToSearch{padding:10px;line-height:1.5}.metaDescription{padding:10px;line-height:1.5}.resultBtnDiv{display:flex;align-content:center;justify-content:center}.resultBtnDiv .resultBtn{height:3rem;font-size:medium;padding:5px 10px;margin:10px}.resultBtnDiv .resultBtn button{margin:auto}.resultsParagraphDiv{display:flex;justify-content:center;padding-bottom:25px}.resultsParagraphDiv p{white-space:pre;line-height:1.5}.resultsParagraphDiv .resultsParagraphKeywords{text-align:right}.resultsParagraphDiv .resultsParagraphNumbers{padding-left:10px}.resultsParagraphDiv .resultsParagraphCompanyName{padding-left:10px}.resultsParagraphDivTwo{display:flex;flex-direction:column;justify-content:center;align-items:center;padding-bottom:25px}.resultsParagraphDivTwo p{white-space:pre;line-height:1.5}","",{version:3,sources:["webpack://./src/scss/_keywordModule.scss","webpack://./src/scss/_variablesAndFunctions.scss","webpack://./src/scss/_searchModule.scss","webpack://./src/scss/_moduleMetaDescription.scss","webpack://./src/style.scss"],names:[],mappings:"AAEA,kBCCE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBDHoB,CACpB,iBAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,YAAA,CACA,+BAAA,CAGF,QACE,gBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CACA,YACE,aAAA,CACA,kBACE,aAAA,CAEF,kBACE,cAAA,CACA,SAAA,CACA,kBAAA,CAEF,qBACE,WAAA,CACA,WAAA,CACA,uBAAA,CACA,YAAA,CAEF,mBACE,WAAA,CACA,YAAA,CACA,eAAA,CAGJ,iBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CE3CJ,eACE,gBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CACA,wBACE,WAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CAEF,sBACE,WAAA,CACA,YAAA,CACA,eAAA,CAEF,wBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CCtBJ,aACE,gBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CACA,sBACE,WAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CAEF,oBACE,WAAA,CACA,YAAA,CACA,eAAA,CAEF,sBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CCpBJ,EACE,qBAAA,CACA,QAAA,CACA,SAAA,CAGF,OHPE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBGKoB,CACpB,iBAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,eAAA,CACA,wBAAA,CACA,kBAAA,CACA,eAAA,CAGF,SACE,iBAAA,CACA,WAAA,CACA,eAAA,CACA,wBAAA,CAGF,QH1BE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBGwBoB,CACpB,iBAAA,CACA,QAAA,CACA,MAAA,CACA,WAAA,CACA,UAAA,CACA,qBHpCiB,CGqCjB,UAAA,CACA,eAAA,CACA,iBAAA,CAGF,aACE,YAAA,CACA,4BAAA,CAEA,wBACE,WAAA,CACA,gBAAA,CACA,gBAAA,CACA,WAAA,CAGJ,aACE,YAAA,CACA,eAAA,CAGF,kBACE,YAAA,CACA,eAAA,CAGF,aACE,YAAA,CACA,eAAA,CAGF,iBACE,YAAA,CACA,eAAA,CAGF,cACE,YAAA,CACA,oBAAA,CACA,sBAAA,CACA,yBACE,WAAA,CACA,gBAAA,CACA,gBAAA,CACA,WAAA,CACA,gCACE,WAAA,CAIN,qBACE,YAAA,CACA,sBAAA,CACA,mBAAA,CACA,uBACE,eAAA,CACA,eAAA,CAEF,+CACE,gBAAA,CAGF,8CACE,iBAAA,CAEF,kDACE,iBAAA,CAIJ,wBACE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,mBAAA,CACA,0BACE,eAAA,CACA,eAAA",sourcesContent:['@import "./variablesAndFunctions";\n\n.moduleBackground {\n  @include flexCenter(row);\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.module {\n  font-size: larger;\n  background-color: white;\n  height: 75vh;\n  width: 75vw;\n  color: black;\n  padding: 10px;\n  line-height: 2rem;\n  div {\n    display: block;\n    label {\n      display: block;\n    }\n    input {\n      height: 1.75rem;\n      width: 80%;\n      margin-bottom: 2rem;\n    }\n    textarea {\n      padding: 5px;\n      resize: none;\n      width: calc(100% - 10px);\n      height: 20rem;\n    }\n    button {\n      width: 10rem;\n      padding: 1rem;\n      margin-top: 2rem;\n    }\n  }\n  .buttons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n','$footerBackground: black;\n\n@mixin flexCenter($direction) {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: $direction;\n}\n\n$font-weights: (\n  "light": 300,\n  "regular": 400,\n  "medium": 500,\n  "bold": 700,\n);\n\n@function weight($weight-name) {\n  @return map-get($map: $font-weights, $key: $weight-name);\n}\n','@import "./variablesAndFunctions";\n\n.module-search {\n  font-size: larger;\n  background-color: white;\n  height: 75vh;\n  width: 75vw;\n  color: black;\n  padding: 10px;\n  line-height: 2rem;\n  textarea {\n    padding: 5px;\n    resize: none;\n    height: 80%;\n    width: 100%;\n  }\n  button {\n    width: 10rem;\n    padding: 1rem;\n    margin-top: 2rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n','@import "./variablesAndFunctions";\n\n.module-meta {\n  font-size: larger;\n  background-color: white;\n  height: 75vh;\n  width: 75vw;\n  color: black;\n  padding: 10px;\n  line-height: 2rem;\n  textarea {\n    padding: 5px;\n    resize: none;\n    height: 80%;\n    width: 100%;\n  }\n  button {\n    width: 10rem;\n    padding: 1rem;\n    margin-top: 2rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n','@import "./scss/keywordModule";\n@import "./scss/variablesAndFunctions";\n@import "./scss/searchModule";\n@import "./scss/moduleMetaDescription";\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nheader {\n  @include flexCenter(row);\n  position: relative;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  min-height: 10vh;\n  background-color: rgb(184, 182, 182);\n  font-size: xx-large;\n  font-weight: weight(bold);\n}\n\n#display {\n  position: relative;\n  width: 100vw;\n  min-height: 85vh;\n  background-color: antiquewhite;\n}\n\n.footer {\n  @include flexCenter(row);\n  position: relative;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  height: 5vh;\n  background-color: $footerBackground;\n  color: white;\n  font-weight: weight(light);\n  font-size: x-small;\n}\n\n.commandBtns {\n  display: flex;\n  justify-content: space-evenly;\n\n  .moduleBtn {\n    height: 3rem;\n    font-size: medium;\n    padding: 5px 10px;\n    margin: 10px;\n  }\n}\n.companyName {\n  padding: 10px;\n  line-height: 1.5;\n}\n\n.keywordsToSearch {\n  padding: 10px;\n  line-height: 1.5;\n}\n\n.docToSearch {\n  padding: 10px;\n  line-height: 1.5;\n}\n\n.metaDescription {\n  padding: 10px;\n  line-height: 1.5;\n}\n\n.resultBtnDiv {\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  .resultBtn {\n    height: 3rem;\n    font-size: medium;\n    padding: 5px 10px;\n    margin: 10px;\n    button {\n      margin: auto;\n    }\n  }\n}\n.resultsParagraphDiv {\n  display: flex;\n  justify-content: center;\n  padding-bottom: 25px;\n  p {\n    white-space: pre;\n    line-height: 1.5;\n  }\n  .resultsParagraphKeywords {\n    text-align: right;\n  }\n\n  .resultsParagraphNumbers {\n    padding-left: 10px;\n  }\n  .resultsParagraphCompanyName {\n    padding-left: 10px;\n  }\n}\n\n.resultsParagraphDivTwo {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 25px;\n  p {\n    white-space: pre;\n    line-height: 1.5;\n  }\n}\n'],sourceRoot:""}]);const a=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",A=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),A&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),A&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,A,o,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(A)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(i[c]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);A&&i[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),r="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([r]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,A=0;A<n.length;A++)if(n[A].identifier===e){t=A;break}return t}function A(e,A){for(var r={},i=[],a=0;a<e.length;a++){var c=e[a],s=A.base?c[0]+A.base:c[0],d=r[s]||0,l="".concat(s," ").concat(d);r[s]=d+1;var u=t(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var C=o(p,A);A.byIndex=a,n.splice(a,0,{identifier:l,updater:C,references:1})}i.push(l)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var r=A(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var a=t(r[i]);n[a].references--}for(var c=A(e,o),s=0;s<r.length;s++){var d=t(r[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}r=c}}},569:e=>{var n={};e.exports=function(e,t){var A=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!A)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");A.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var A="";t.supports&&(A+="@supports (".concat(t.supports,") {")),t.media&&(A+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(A+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),A+=t.css,o&&(A+="}"),t.media&&(A+="}"),t.supports&&(A+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(A+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(A,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(A){var o=n[A];if(void 0!==o)return o.exports;var r=n[A]={id:A,exports:{}};return e[A](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var A in n)t.o(n,A)&&!t.o(e,A)&&Object.defineProperty(e,A,{enumerable:!0,get:n[A]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;var A={};(()=>{t.d(A,{v:()=>O});var e=t(379),n=t.n(e),o=t(795),r=t.n(o),i=t(569),a=t.n(i),c=t(565),s=t.n(c),d=t(216),l=t.n(d),u=t(589),p=t.n(u),C=t(192),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=a().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=l(),n()(C.Z,h),C.Z&&C.Z.locals&&C.Z.locals;class m{constructor(e){this.keyword=e,this.numberOfMatches=null}get name(){return this.keyword}set matches(e){null===e&&(e=0),this.numberOfMatches=e}get matches(){return this.numberOfMatches}get matchString(){return`${this.keyword} was matched ${this.numberOfMatches} times in the article`}}let g,f=[];const v=document.querySelector("body"),y=document.querySelector(".mainKeywords");function x(e){const n=O("button");return n.id=`module${e}`,n.textContent=`${e}`,n}function b(){(function(){const e=document.getElementById("keywords").value;f=e.split("\n"),function(e){for(let n=0;n<e.length;n++){let t=/[a-z]|[A-Z]/;e[n].match(t)||(e.splice(n,1),n--)}}(f),f=function(e){const n=[];return e.forEach((e=>{const t=new m(e);n.push(t)})),n}(f),y.textContent=function(e){let n=[];return e.forEach((e=>{n.push(` ${e.name}`)})),n}(f)})(),function(){let e=document.getElementById("companyName").value;e.length<=1&&(e="No Name Defined"),g=new m(e),document.querySelector(".companyNameKeyword").textContent=g.name}(),w()}function w(){const e=document.querySelector(".moduleBackground");v.removeChild(e)}const B=document.querySelector("body"),k=document.querySelector(".mainSearchText");let E="";function S(e){const n=O("button");return n.id=`module${e}`,n.textContent=`${e}`,n}function j(){const e=document.querySelector(".moduleBackground");B.removeChild(e)}function q(){E="";const e=document.getElementById("search").value;E=e,k.textContent=E,j()}const M=document.querySelector("body"),D=document.querySelector(".metaDescriptionText");let F;function $(e){const n=O("button");return n.id=`module${e}`,n.textContent=`${e}`,n}function P(){const e=document.querySelector(".moduleBackground");M.removeChild(e)}function N(){F="",F=document.getElementById("meta").value,D.textContent=F,P()}function z(e){let n,t=Array.isArray(e)?[]:{};for(const A in e)n=e[A],t[A]="object"==typeof n?z(n):n;return t}function W(e){let n=z(e),t=0;return e.forEach((A=>{if(null!==A){for(let o=0;o<e.length;o++)if(null!==e[o]&&A[0]!==e[o][0]&&new RegExp(`${A[0]}`,"gmi").test(e[o][0])){let A=e[o].length;n[t].splice(0,A)}t++}})),n}function Y(){!function(){const e=[];f.forEach((n=>{const t=new RegExp(`${n.keyword}`,"gmi"),A=E.match(t);e.push(A)})),function(e){let n=0;f.forEach((t=>{void 0===e[n].length?t.matches=0:t.matches=e[n].length,n++}))}(W(e))}();let e=function(){const e=new RegExp(`${g.name}`,"gmi");let n=E.match(e);return null===n&&(n=0),n}();const n=E.match(/\b\S+\b/g).length,t=F.split("").length,A=["Keyword Used"],o=["Number of Times Used"];f.forEach((e=>{A.push(e.name),o.push(e.matches)})),document.querySelector(".resultsParagraphKeywords").textContent=A.join("\r\n"),document.querySelector(".resultsParagraphNumbers").textContent=o.join("\r\n"),document.querySelector(".resultsParagraphCompanyName").textContent=`Company Name: *${g.name}* is used ${e.length} times`,document.querySelector(".resultsParagraphWordCount").textContent=`WordCount for the document is: ${n}`,document.querySelector(".resultsParagraphMetaChars").textContent=`The Meta Description contains: ${t} characters.`}document.getElementById("display");const T=document.querySelector(".commandBtns");function U(){!function(){const e=O("div","moduleBackground",""),n=O("div","module",'<div><label for="companyName">Company Name:</label><input type="text" name="companyName" id="companyName"></div><div><label for="keywords">Enter keywords, separated by line break (press enter)</label><textarea name="keywords"id="keywords"placeholder="keyword one &#10keyword two &#10keyword three &#10etc.."></textarea></div>'),t=O("div","buttons","");t.appendChild(function(){const e=x("Ok");return e.addEventListener("click",b),e}()),t.appendChild(function(){const e=x("Cancel");return e.addEventListener("click",w),e}()),n.appendChild(t),e.appendChild(n),v.appendChild(e)}()}function L(){!function(){const e=O("div","moduleBackground",""),n=O("div","module-search",'<textarea name="search" id="search" placeholder="paste document to search in here and press OK"></textarea>'),t=O("div","buttons","");t.appendChild(function(){const e=S("Ok");return e.addEventListener("click",q),e}()),t.appendChild(function(){const e=S("Cancel");return e.addEventListener("click",j),e}()),n.appendChild(t),e.appendChild(n),B.appendChild(e)}()}function G(){!function(){const e=O("div","moduleBackground",""),n=O("div","module-meta",'<textarea name="meta" id="meta" placeholder="paste Meta Description here and press OK"></textarea>'),t=O("div","buttons","");t.appendChild(function(){const e=$("Ok");return e.addEventListener("click",N),e}()),t.appendChild(function(){const e=$("Cancel");return e.addEventListener("click",P),e}()),n.appendChild(t),e.appendChild(n),M.appendChild(e)}()}function O(e,n,t){const A=document.createElement(e);return A.classList.add(n),A.innerHTML=t,A}!function(){const e=O("button","moduleBtn","Click me to add keywords!");e.addEventListener("click",U),T.appendChild(e)}(),function(){const e=O("button","moduleBtn","Click me to add text to search!");e.addEventListener("click",L),T.appendChild(e)}(),function(){const e=O("button","resultBtn","Click me for the results!");e.addEventListener("click",Y),document.querySelector(".resultBtnDiv").appendChild(e)}(),function(){const e=O("button","moduleBtn","Click me to add the Meta Description!");e.addEventListener("click",G),T.appendChild(e)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,