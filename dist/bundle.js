(()=>{"use strict";var e={192:(e,n,t)=>{t.d(n,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),A=t.n(i)()(r());A.push([e.id,".moduleBackground{display:flex;justify-content:center;align-items:center;flex-direction:row;position:absolute;top:0;left:0;width:100vw;height:100vh;background-color:rgba(0,0,0,.5)}.module{font-size:larger;background-color:#fff;height:75vh;width:75vw;color:#000;padding:10px;line-height:2rem}.module div{display:block}.module div label{display:block}.module div input{height:1.75rem;width:80%;margin-bottom:2rem}.module div textarea{padding:5px;resize:none;width:calc(100% - 10px);height:35em}.module div button{width:10rem;padding:1rem;margin-top:2rem}.module .buttons{display:flex;justify-content:space-evenly;align-items:center}*{box-sizing:border-box;margin:0;padding:0}header{display:flex;justify-content:center;align-items:center;flex-direction:row;position:relative;top:0;left:0;width:100vw;height:10vh;background-color:#b8b6b6;font-size:xx-large;font-weight:700}#display{position:relative;width:100vw;height:85vh;background-color:#faebd7}.footer{display:flex;justify-content:center;align-items:center;flex-direction:row;position:relative;bottom:0;left:0;width:100vw;height:5vh;background-color:#000;color:#fff;font-weight:300;font-size:x-small}","",{version:3,sources:["webpack://./src/scss/_keywordModule.scss","webpack://./src/scss/_variablesAndFunctions.scss","webpack://./src/style.scss"],names:[],mappings:"AAEA,kBCCE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBDHoB,CACpB,iBAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,YAAA,CACA,+BAAA,CAGF,QACE,gBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CACA,YACE,aAAA,CACA,kBACE,aAAA,CAEF,kBACE,cAAA,CACA,SAAA,CACA,kBAAA,CAEF,qBACE,WAAA,CACA,WAAA,CACA,uBAAA,CACA,WAAA,CAEF,mBACE,WAAA,CACA,YAAA,CACA,eAAA,CAGJ,iBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CE3CJ,EACE,qBAAA,CACA,QAAA,CACA,SAAA,CAeF,ODjBE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBCeoB,CACpB,iBAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,WAAA,CACA,wBAAA,CACA,kBAAA,CACA,eAAA,CAGF,SACE,iBAAA,CACA,WAAA,CACA,WAAA,CACA,wBAAA,CAGF,QDpCE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBCkCoB,CACpB,iBAAA,CACA,QAAA,CACA,MAAA,CACA,WAAA,CACA,UAAA,CACA,qBAtCiB,CAuCjB,UAAA,CACA,eAAA,CACA,iBAAA",sourcesContent:['@import "./variablesAndFunctions";\n\n.moduleBackground {\n  @include flexCenter(row);\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.module {\n  font-size: larger;\n  background-color: white;\n  height: 75vh;\n  width: 75vw;\n  color: black;\n  padding: 10px;\n  line-height: 2rem;\n  div {\n    display: block;\n    label {\n      display: block;\n    }\n    input {\n      height: 1.75rem;\n      width: 80%;\n      margin-bottom: 2rem;\n    }\n    textarea {\n      padding: 5px;\n      resize: none;\n      width: calc(100% - 10px);\n      height: 35em;\n    }\n    button {\n      width: 10rem;\n      padding: 1rem;\n      margin-top: 2rem;\n    }\n  }\n  .buttons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n','$footerBackground: black;\n\n@mixin flexCenter($direction) {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: $direction;\n}\n\n$font-weights: (\n  "light": 300,\n  "regular": 400,\n  "medium": 500,\n  "bold": 700,\n);\n\n@function weight($weight-name) {\n  @return map-get($map: $font-weights, $key: $weight-name);\n}\n','@import "./scss/keywordModule";\n@import "./scss/variablesAndFunctions";\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n$footerBackground: black;\n$font-weights: (\n  "light": 300,\n  "regular": 400,\n  "medium": 500,\n  "bold": 700,\n);\n\n@function weight($weight-name) {\n  @return map-get($map: $font-weights, $key: $weight-name);\n}\n\nheader {\n  @include flexCenter(row);\n  position: relative;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 10vh;\n  background-color: rgb(184, 182, 182);\n  font-size: xx-large;\n  font-weight: weight(bold);\n}\n\n#display {\n  position: relative;\n  width: 100vw;\n  height: 85vh;\n  background-color: antiquewhite;\n}\n\n.footer {\n  @include flexCenter(row);\n  position: relative;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  height: 5vh;\n  background-color: $footerBackground;\n  color: white;\n  font-weight: weight(light);\n  font-size: x-small;\n}\n'],sourceRoot:""}]);const a=A},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var A={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(A[c]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);o&&A[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),A=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(A).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},A=[],a=0;a<e.length;a++){var c=e[a],s=o.base?c[0]+o.base:c[0],d=i[s]||0,l="".concat(s," ").concat(d);i[s]=d+1;var u=t(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var C=r(p,o);o.byIndex=a,n.splice(a,0,{identifier:l,updater:C,references:1})}A.push(l)}return A}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var A=0;A<i.length;A++){var a=t(i[A]);n[a].references--}for(var c=o(e,r),s=0;s<i.length;s++){var d=t(i[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=c}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;var o={};(()=>{t.d(o,{v:()=>x});var e=t(379),n=t.n(e),r=t(795),i=t.n(r),A=t(569),a=t.n(A),c=t(565),s=t.n(c),d=t(216),l=t.n(d),u=t(589),p=t.n(u),C=t(192),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=a().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=l(),n()(C.Z,h),C.Z&&C.Z.locals&&C.Z.locals;class f{constructor(e){this.keyword=e,this.regEx=new RegExp(`${f}`,"gmi"),this.matches=[]}getMatches=e=>{this.matches=e.matches(this.regEx)};countMatches=()=>this.matches.length}let m=[];const g=document.querySelector("body");function v(e){const n=x("button");return n.id=`module${e}`,n.textContent=`${e}`,n}function b(){const e=document.getElementById("keywords").value;m=e.split("\n"),function(e){for(let n=0;n<e.length;n++){let t=/[a-z]|[A-Z]/;e[n].match(t)||(e.splice(n,1),n--)}}(m),m=function(e){const n=[];return e.forEach((e=>{const t=new f(e);n.push(t)})),n}(m),console.log(m),w()}function w(){const e=document.querySelector(".moduleBackground");g.removeChild(e)}const y=document.getElementById("display");function k(){!function(){const e=x("div","moduleBackground",""),n=x("div","module",'<div><label for="companyName">Company Name:</label><input type="text" name="companyName" id="companyName"></div><div><label for="keywords">Enter keywords, separated by line break (press enter)</label><textarea name="keywords"id="keywords"placeholder="keyword one &#10keyword two &#10keyword three &#10etc.."></textarea></div>'),t=x("div","buttons","");t.appendChild(function(){const e=v("Ok");return e.addEventListener("click",b),e}()),t.appendChild(function(){const e=v("Cancel");return e.addEventListener("click",w),e}()),n.appendChild(t),e.appendChild(n),g.appendChild(e)}()}function x(e,n,t){const o=document.createElement(e);return o.classList.add(n),o.innerHTML=t,o}!function(){const e=x("button","moduleBtn","Click me to add keywords!");e.addEventListener("click",k),y.appendChild(e)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,