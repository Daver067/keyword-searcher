(()=>{"use strict";var e={192:(e,n,t)=>{t.d(n,{Z:()=>a});var r=t(537),o=t.n(r),A=t(645),i=t.n(A)()(o());i.push([e.id,".moduleBackground{display:flex;justify-content:center;align-items:center;flex-direction:row;position:absolute;top:0;left:0;width:100vw;height:100vh;background-color:rgba(0,0,0,.5)}.module{font-size:larger;background-color:#fff;height:75vh;width:75vw;color:#000;padding:10px;line-height:2rem}.module div{display:block}.module div label{display:block}.module div input{height:1.75rem;width:80%;margin-bottom:2rem}.module div textarea{padding:5px;resize:none;width:calc(100% - 10px);height:20rem}.module div button{width:10rem;padding:1rem;margin-top:2rem}.module .buttons{display:flex;justify-content:space-evenly;align-items:center}.module-search{font-size:larger;background-color:#fff;height:75vh;width:75vw;color:#000;padding:10px;line-height:2rem}.module-search textarea{padding:5px;resize:none;height:80%;width:100%}.module-search button{width:10rem;padding:1rem;margin-top:2rem}.module-search .buttons{display:flex;justify-content:space-evenly;align-items:center}.module-meta{font-size:larger;background-color:#fff;height:75vh;width:75vw;color:#000;padding:10px;line-height:2rem}.module-meta textarea{padding:5px;resize:none;height:80%;width:100%}.module-meta button{width:10rem;padding:1rem;margin-top:2rem}.module-meta .buttons{display:flex;justify-content:space-evenly;align-items:center}*{box-sizing:border-box;margin:0;padding:0}header{display:flex;justify-content:center;align-items:center;flex-direction:row;position:relative;top:0;left:0;width:100vw;min-height:10vh;background-color:#b8b6b6;font-size:xx-large;font-weight:700}#display{position:relative;width:100vw;min-height:85vh;background-color:#faebd7}.footer{display:flex;justify-content:center;align-items:center;flex-direction:row;position:relative;bottom:0;left:0;width:100vw;height:5vh;background-color:#000;color:#fff;font-weight:300;font-size:x-small}.commandBtns{display:flex;justify-content:space-evenly}.commandBtns .moduleBtn{height:3rem;font-size:medium;padding:5px 10px;margin:10px}.companyName{padding:10px;line-height:1.5}.keywordsToSearch{padding:10px;line-height:1.5}.docToSearch{padding:10px;line-height:1.5}.metaDescription{padding:10px;line-height:1.5}.resultBtnDiv{display:flex;align-content:center;justify-content:center}.resultBtnDiv .resultBtn{height:3rem;font-size:medium;padding:5px 10px;margin:10px}.resultBtnDiv .resultBtn button{margin:auto}.resultsParagraphDiv{display:flex;justify-content:center;padding-bottom:25px}.resultsParagraphDiv p{white-space:pre;line-height:1.5}.resultsParagraphDiv .resultsParagraphKeywords{text-align:center}.resultsParagraphDiv .resultsParagraphNumbers{padding-right:10px;text-align:right}.resultsParagraphDiv .resultsParagraphFillerNumbers{padding-left:10px;text-align:left}.resultsParagraphDiv .resultsParagraphTotal{padding-left:10px;text-align:center}.resultsParagraphDiv .resultsParagraphCompanyName{padding-left:10px}.resultsParagraphDivTwo{display:flex;flex-direction:column;justify-content:center;align-items:center;padding-bottom:25px}.resultsParagraphDivTwo p{white-space:pre;line-height:1.5}","",{version:3,sources:["webpack://./src/scss/_keywordModule.scss","webpack://./src/scss/_variablesAndFunctions.scss","webpack://./src/scss/_searchModule.scss","webpack://./src/scss/_moduleMetaDescription.scss","webpack://./src/style.scss"],names:[],mappings:"AAEA,kBCCE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBDHoB,CACpB,iBAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,YAAA,CACA,+BAAA,CAGF,QACE,gBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CACA,YACE,aAAA,CACA,kBACE,aAAA,CAEF,kBACE,cAAA,CACA,SAAA,CACA,kBAAA,CAEF,qBACE,WAAA,CACA,WAAA,CACA,uBAAA,CACA,YAAA,CAEF,mBACE,WAAA,CACA,YAAA,CACA,eAAA,CAGJ,iBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CE3CJ,eACE,gBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CACA,wBACE,WAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CAEF,sBACE,WAAA,CACA,YAAA,CACA,eAAA,CAEF,wBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CCtBJ,aACE,gBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CACA,sBACE,WAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CAEF,oBACE,WAAA,CACA,YAAA,CACA,eAAA,CAEF,sBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CCpBJ,EACE,qBAAA,CACA,QAAA,CACA,SAAA,CAGF,OHPE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBGKoB,CACpB,iBAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,eAAA,CACA,wBAAA,CACA,kBAAA,CACA,eAAA,CAGF,SACE,iBAAA,CACA,WAAA,CACA,eAAA,CACA,wBAAA,CAGF,QH1BE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBGwBoB,CACpB,iBAAA,CACA,QAAA,CACA,MAAA,CACA,WAAA,CACA,UAAA,CACA,qBHpCiB,CGqCjB,UAAA,CACA,eAAA,CACA,iBAAA,CAGF,aACE,YAAA,CACA,4BAAA,CAEA,wBACE,WAAA,CACA,gBAAA,CACA,gBAAA,CACA,WAAA,CAGJ,aACE,YAAA,CACA,eAAA,CAGF,kBACE,YAAA,CACA,eAAA,CAGF,aACE,YAAA,CACA,eAAA,CAGF,iBACE,YAAA,CACA,eAAA,CAGF,cACE,YAAA,CACA,oBAAA,CACA,sBAAA,CACA,yBACE,WAAA,CACA,gBAAA,CACA,gBAAA,CACA,WAAA,CACA,gCACE,WAAA,CAIN,qBACE,YAAA,CACA,sBAAA,CACA,mBAAA,CACA,uBACE,eAAA,CACA,eAAA,CAEF,+CACE,iBAAA,CAGF,8CACE,kBAAA,CACA,gBAAA,CAEF,oDACE,iBAAA,CACA,eAAA,CAEF,4CACE,iBAAA,CACA,iBAAA,CAEF,kDACE,iBAAA,CAIJ,wBACE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,mBAAA,CACA,0BACE,eAAA,CACA,eAAA",sourcesContent:['@import "./variablesAndFunctions";\n\n.moduleBackground {\n  @include flexCenter(row);\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.module {\n  font-size: larger;\n  background-color: white;\n  height: 75vh;\n  width: 75vw;\n  color: black;\n  padding: 10px;\n  line-height: 2rem;\n  div {\n    display: block;\n    label {\n      display: block;\n    }\n    input {\n      height: 1.75rem;\n      width: 80%;\n      margin-bottom: 2rem;\n    }\n    textarea {\n      padding: 5px;\n      resize: none;\n      width: calc(100% - 10px);\n      height: 20rem;\n    }\n    button {\n      width: 10rem;\n      padding: 1rem;\n      margin-top: 2rem;\n    }\n  }\n  .buttons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n','$footerBackground: black;\n\n@mixin flexCenter($direction) {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: $direction;\n}\n\n$font-weights: (\n  "light": 300,\n  "regular": 400,\n  "medium": 500,\n  "bold": 700,\n);\n\n@function weight($weight-name) {\n  @return map-get($map: $font-weights, $key: $weight-name);\n}\n','@import "./variablesAndFunctions";\n\n.module-search {\n  font-size: larger;\n  background-color: white;\n  height: 75vh;\n  width: 75vw;\n  color: black;\n  padding: 10px;\n  line-height: 2rem;\n  textarea {\n    padding: 5px;\n    resize: none;\n    height: 80%;\n    width: 100%;\n  }\n  button {\n    width: 10rem;\n    padding: 1rem;\n    margin-top: 2rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n','@import "./variablesAndFunctions";\n\n.module-meta {\n  font-size: larger;\n  background-color: white;\n  height: 75vh;\n  width: 75vw;\n  color: black;\n  padding: 10px;\n  line-height: 2rem;\n  textarea {\n    padding: 5px;\n    resize: none;\n    height: 80%;\n    width: 100%;\n  }\n  button {\n    width: 10rem;\n    padding: 1rem;\n    margin-top: 2rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n','@import "./scss/keywordModule";\n@import "./scss/variablesAndFunctions";\n@import "./scss/searchModule";\n@import "./scss/moduleMetaDescription";\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nheader {\n  @include flexCenter(row);\n  position: relative;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  min-height: 10vh;\n  background-color: rgb(184, 182, 182);\n  font-size: xx-large;\n  font-weight: weight(bold);\n}\n\n#display {\n  position: relative;\n  width: 100vw;\n  min-height: 85vh;\n  background-color: antiquewhite;\n}\n\n.footer {\n  @include flexCenter(row);\n  position: relative;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  height: 5vh;\n  background-color: $footerBackground;\n  color: white;\n  font-weight: weight(light);\n  font-size: x-small;\n}\n\n.commandBtns {\n  display: flex;\n  justify-content: space-evenly;\n\n  .moduleBtn {\n    height: 3rem;\n    font-size: medium;\n    padding: 5px 10px;\n    margin: 10px;\n  }\n}\n.companyName {\n  padding: 10px;\n  line-height: 1.5;\n}\n\n.keywordsToSearch {\n  padding: 10px;\n  line-height: 1.5;\n}\n\n.docToSearch {\n  padding: 10px;\n  line-height: 1.5;\n}\n\n.metaDescription {\n  padding: 10px;\n  line-height: 1.5;\n}\n\n.resultBtnDiv {\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  .resultBtn {\n    height: 3rem;\n    font-size: medium;\n    padding: 5px 10px;\n    margin: 10px;\n    button {\n      margin: auto;\n    }\n  }\n}\n.resultsParagraphDiv {\n  display: flex;\n  justify-content: center;\n  padding-bottom: 25px;\n  p {\n    white-space: pre;\n    line-height: 1.5;\n  }\n  .resultsParagraphKeywords {\n    text-align: center;\n  }\n\n  .resultsParagraphNumbers {\n    padding-right: 10px;\n    text-align: right;\n  }\n  .resultsParagraphFillerNumbers {\n    padding-left: 10px;\n    text-align: left;\n  }\n  .resultsParagraphTotal {\n    padding-left: 10px;\n    text-align: center;\n  }\n  .resultsParagraphCompanyName {\n    padding-left: 10px;\n  }\n}\n\n.resultsParagraphDivTwo {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 25px;\n  p {\n    white-space: pre;\n    line-height: 1.5;\n  }\n}\n'],sourceRoot:""}]);const a=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,A){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(i[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&i[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),A="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([A]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var A={},i=[],a=0;a<e.length;a++){var c=e[a],s=r.base?c[0]+r.base:c[0],l=A[s]||0,d="".concat(s," ").concat(l);A[s]=l+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var C=o(p,r);r.byIndex=a,n.splice(a,0,{identifier:d,updater:C,references:1})}i.push(d)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var A=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<A.length;i++){var a=t(A[i]);n[a].references--}for(var c=r(e,o),s=0;s<A.length;s++){var l=t(A[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}A=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var A=n[r]={id:r,exports:{}};return e[r](A,A.exports,t),A.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;var r={};(()=>{t.d(r,{v:()=>O});var e=t(379),n=t.n(e),o=t(795),A=t.n(o),i=t(569),a=t.n(i),c=t(565),s=t.n(c),l=t(216),d=t.n(l),u=t(589),p=t.n(u),C=t(192),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=a().bind(null,"head"),h.domAPI=A(),h.insertStyleElement=d(),n()(C.Z,h),C.Z&&C.Z.locals&&C.Z.locals;class m{constructor(e){this.keyword=e,this.numberOfMatches=null}get name(){return this.keyword}set matches(e){null===e&&(e=0),this.numberOfMatches=e}get matches(){return this.numberOfMatches}get matchString(){return`${this.keyword} was matched ${this.numberOfMatches} times in the article`}}let g,f=[];const v=document.querySelector("body"),y=document.querySelector(".mainKeywords");function x(e){const n=O("button");return n.id=`module${e}`,n.textContent=`${e}`,n}function b(){(function(){const e=document.getElementById("keywords").value;f=e.split("\n"),function(e){for(let n=0;n<e.length;n++){let t=/[a-z]|[A-Z]/;e[n].match(t)||(e.splice(n,1),n--)}}(f),f=function(e){const n=[];return e.forEach((e=>{const t=new m(e);n.push(t)})),n}(f),y.textContent=function(e){let n=[];return e.forEach((e=>{n.push(` ${e.name}`)})),n}(f)})(),function(){let e=document.getElementById("companyName").value;e.length<=1&&(e="No Name Defined"),g=new m(e),document.querySelector(".companyNameKeyword").textContent=g.name}(),w()}function w(){const e=document.querySelector(".moduleBackground");v.removeChild(e)}const B=document.querySelector("body"),k=document.querySelector(".mainSearchText");let E="";function S(e){const n=O("button");return n.id=`module${e}`,n.textContent=`${e}`,n}function j(){const e=document.querySelector(".moduleBackground");B.removeChild(e)}function P(){E="";const e=document.getElementById("search").value;E=e,k.textContent=E,j()}const F=document.querySelector("body"),q=document.querySelector(".metaDescriptionText");let D;function M(e){const n=O("button");return n.id=`module${e}`,n.textContent=`${e}`,n}function T(){const e=document.querySelector(".moduleBackground");F.removeChild(e)}function N(){D="",D=document.getElementById("meta").value,q.textContent=D,T()}function $(e){let n,t=Array.isArray(e)?[]:null;for(const r in e)n=e[r],t[r]="object"==typeof n?$(n):n;return t}function W(e){let n=$(e),t=0;return e.forEach((r=>{if(null!==r){for(let o=0;o<e.length;o++)if(null!==e[o]&&r[0]!==e[o][0]&&new RegExp(`${r[0]}`,"gmi").test(e[o][0])){let r=e[o].length;n[t].splice(0,r)}t++}else t++})),n}function z(){const e=function(){const e=[];return f.forEach((n=>{const t=new RegExp(`${n.keyword}`,"gmi"),r=E.match(t);e.push(r),console.log(r)})),function(e){let n=0;f.forEach((t=>{null===e[n]?t.matches=0:t.matches=e[n].length,n++}))}(W(e)),e}();let n=function(e,n){for(let t=0;t<e.length;t++)null!==e[t]&&(n[t]-=e[t].length);return n}(e,function(){let e=function(){let e=[];return f.forEach((n=>{let t=n.name.split(" ");const r=t.length;if(1!==r){for(let e=r-1;e>0;e--)t.splice(e,0,"(\\b\\w{0,25}\\b)?");e.push(t.join("\\s?"))}else e.push(t.join(""))})),e}(),n=[];return e.forEach((e=>{const t=new RegExp(`${e}`,"gmi");let r=E.match(t);null===r&&(r=[]),n.push(r.length)})),n}()),t=function(e,n){let t=$(e),r=0,o=W(n);return console.log(o),e.forEach((e=>{null!==e&&null!==o[r]?(t[r]+=o[r].length,r++):r++})),t}(n,e);console.log(t);let r=function(){const e=new RegExp(`${g.name}`,"gmi");let n=E.match(e);return null===n&&(n=0),n}();const o=E.match(/\b\S+\b/g).length,A=D.split("").length;n.splice(0,0,"Additional Times Used With a Filler Word");const i=["Keyword Used"],a=["Number of Times Used Independently"];f.forEach((e=>{i.push(e.name),a.push(e.matches)})),document.querySelector(".resultsParagraphKeywords").textContent=i.join("\r\n"),document.querySelector(".resultsParagraphNumbers").textContent=a.join("\r\n"),document.querySelector(".resultsParagraphCompanyName").textContent=`Company Name: *${g.name}* is used ${r.length} times`,document.querySelector(".resultsParagraphWordCount").textContent=`WordCount for the document is: ${o}`,document.querySelector(".resultsParagraphMetaChars").textContent=`The Meta Description contains: ${A} characters.`,document.querySelector(".resultsParagraphFillerNumbers").textContent=n.join("\r\n"),t.splice(0,0,"TOTAL TIMES USED"),document.querySelector(".resultsParagraphTotal").textContent=t.join("\r\n")}document.getElementById("display");const Y=document.querySelector(".commandBtns");function U(){!function(){const e=O("div","moduleBackground",""),n=O("div","module",'<div><label for="companyName">Company Name:</label><input type="text" name="companyName" id="companyName"></div><div><label for="keywords">Enter keywords, separated by line break (press enter)</label><textarea name="keywords"id="keywords"placeholder="keyword one &#10keyword two &#10keyword three &#10etc.."></textarea></div>'),t=O("div","buttons","");t.appendChild(function(){const e=x("Ok");return e.addEventListener("click",b),e}()),t.appendChild(function(){const e=x("Cancel");return e.addEventListener("click",w),e}()),n.appendChild(t),e.appendChild(n),v.appendChild(e)}()}function L(){!function(){const e=O("div","moduleBackground",""),n=O("div","module-search",'<textarea name="search" id="search" placeholder="paste document to search in here and press OK"></textarea>'),t=O("div","buttons","");t.appendChild(function(){const e=S("Ok");return e.addEventListener("click",P),e}()),t.appendChild(function(){const e=S("Cancel");return e.addEventListener("click",j),e}()),n.appendChild(t),e.appendChild(n),B.appendChild(e)}()}function I(){!function(){const e=O("div","moduleBackground",""),n=O("div","module-meta",'<textarea name="meta" id="meta" placeholder="paste Meta Description here and press OK"></textarea>'),t=O("div","buttons","");t.appendChild(function(){const e=M("Ok");return e.addEventListener("click",N),e}()),t.appendChild(function(){const e=M("Cancel");return e.addEventListener("click",T),e}()),n.appendChild(t),e.appendChild(n),F.appendChild(e)}()}function O(e,n,t){const r=document.createElement(e);return r.classList.add(n),r.innerHTML=t,r}!function(){const e=O("button","moduleBtn","Click me to add keywords!");e.addEventListener("click",U),Y.appendChild(e)}(),function(){const e=O("button","moduleBtn","Click me to add text to search!");e.addEventListener("click",L),Y.appendChild(e)}(),function(){const e=O("button","resultBtn","Click me for the results!");e.addEventListener("click",z),document.querySelector(".resultBtnDiv").appendChild(e)}(),function(){const e=O("button","moduleBtn","Click me to add the Meta Description!");e.addEventListener("click",I),Y.appendChild(e)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,