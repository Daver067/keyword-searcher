(()=>{"use strict";var e={192:(e,n,t)=>{t.d(n,{Z:()=>a});var r=t(537),A=t.n(r),o=t(645),i=t.n(o)()(A());i.push([e.id,".moduleBackground{display:flex;justify-content:center;align-items:center;flex-direction:row;position:absolute;top:0;left:0;width:100vw;height:100vh;background-color:rgba(0,0,0,.5)}.module{font-size:larger;background-color:#fff;height:75vh;width:75vw;color:#000;padding:10px;line-height:2rem}.module div{display:block}.module div label{display:block}.module div input{height:1.75rem;width:80%;margin-bottom:2rem}.module div textarea{padding:5px;resize:none;width:calc(100% - 10px);height:20rem}.module div button{width:10rem;padding:1rem;margin-top:2rem}.module .buttons{display:flex;justify-content:space-evenly;align-items:center}.module-search{font-size:larger;background-color:#fff;height:75vh;width:75vw;color:#000;padding:10px;line-height:2rem}.module-search textarea{padding:5px;resize:none;height:80%;width:100%}.module-search button{width:10rem;padding:1rem;margin-top:2rem}.module-search .buttons{display:flex;justify-content:space-evenly;align-items:center}.module-meta{font-size:larger;background-color:#fff;height:75vh;width:75vw;color:#000;padding:10px;line-height:2rem}.module-meta textarea{padding:5px;resize:none;height:80%;width:100%}.module-meta button{width:10rem;padding:1rem;margin-top:2rem}.module-meta .buttons{display:flex;justify-content:space-evenly;align-items:center}*{box-sizing:border-box;margin:0;padding:0}header{display:flex;justify-content:center;align-items:center;flex-direction:row;position:relative;top:0;left:0;width:100vw;min-height:10vh;background-color:#b8b6b6;font-size:xx-large;font-weight:700}#display{position:relative;width:100vw;min-height:85vh;background-color:#faebd7}.footer{display:flex;justify-content:center;align-items:center;flex-direction:row;position:relative;bottom:0;left:0;width:100vw;height:5vh;background-color:#000;color:#fff;font-weight:300;font-size:x-small}.commandBtns{display:flex;justify-content:space-evenly}.commandBtns .moduleBtn{height:3rem;font-size:medium;padding:5px 10px;margin:10px}.companyName{padding:10px;line-height:1.5}.keywordsToSearch{padding:10px;line-height:1.5}.docToSearch{padding:10px;line-height:1.5}.metaDescription{padding:10px;line-height:1.5}.resultBtnDiv{display:flex;align-content:center;justify-content:center}.resultBtnDiv .resultBtn{height:3rem;font-size:medium;padding:5px 10px;margin:10px}.resultBtnDiv .resultBtn button{margin:auto}.resultsParagraphDiv{display:flex;justify-content:center;padding-bottom:25px}.resultsParagraphDiv p{white-space:pre;line-height:1.5}.resultsParagraphDiv .resultsParagraphKeywords{text-align:center}.resultsParagraphDiv .resultsParagraphNumbers{padding-right:10px;text-align:right}.resultsParagraphDiv .resultsParagraphFillerNumbers{padding-left:10px;text-align:left}.resultsParagraphDiv .resultsParagraphCompanyName{padding-left:10px}.resultsParagraphDivTwo{display:flex;flex-direction:column;justify-content:center;align-items:center;padding-bottom:25px}.resultsParagraphDivTwo p{white-space:pre;line-height:1.5}","",{version:3,sources:["webpack://./src/scss/_keywordModule.scss","webpack://./src/scss/_variablesAndFunctions.scss","webpack://./src/scss/_searchModule.scss","webpack://./src/scss/_moduleMetaDescription.scss","webpack://./src/style.scss"],names:[],mappings:"AAEA,kBCCE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBDHoB,CACpB,iBAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,YAAA,CACA,+BAAA,CAGF,QACE,gBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CACA,YACE,aAAA,CACA,kBACE,aAAA,CAEF,kBACE,cAAA,CACA,SAAA,CACA,kBAAA,CAEF,qBACE,WAAA,CACA,WAAA,CACA,uBAAA,CACA,YAAA,CAEF,mBACE,WAAA,CACA,YAAA,CACA,eAAA,CAGJ,iBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CE3CJ,eACE,gBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CACA,wBACE,WAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CAEF,sBACE,WAAA,CACA,YAAA,CACA,eAAA,CAEF,wBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CCtBJ,aACE,gBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CACA,sBACE,WAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CAEF,oBACE,WAAA,CACA,YAAA,CACA,eAAA,CAEF,sBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CCpBJ,EACE,qBAAA,CACA,QAAA,CACA,SAAA,CAGF,OHPE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBGKoB,CACpB,iBAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,eAAA,CACA,wBAAA,CACA,kBAAA,CACA,eAAA,CAGF,SACE,iBAAA,CACA,WAAA,CACA,eAAA,CACA,wBAAA,CAGF,QH1BE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBGwBoB,CACpB,iBAAA,CACA,QAAA,CACA,MAAA,CACA,WAAA,CACA,UAAA,CACA,qBHpCiB,CGqCjB,UAAA,CACA,eAAA,CACA,iBAAA,CAGF,aACE,YAAA,CACA,4BAAA,CAEA,wBACE,WAAA,CACA,gBAAA,CACA,gBAAA,CACA,WAAA,CAGJ,aACE,YAAA,CACA,eAAA,CAGF,kBACE,YAAA,CACA,eAAA,CAGF,aACE,YAAA,CACA,eAAA,CAGF,iBACE,YAAA,CACA,eAAA,CAGF,cACE,YAAA,CACA,oBAAA,CACA,sBAAA,CACA,yBACE,WAAA,CACA,gBAAA,CACA,gBAAA,CACA,WAAA,CACA,gCACE,WAAA,CAIN,qBACE,YAAA,CACA,sBAAA,CACA,mBAAA,CACA,uBACE,eAAA,CACA,eAAA,CAEF,+CACE,iBAAA,CAGF,8CACE,kBAAA,CACA,gBAAA,CAEF,oDACE,iBAAA,CACA,eAAA,CAEF,kDACE,iBAAA,CAIJ,wBACE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,mBAAA,CACA,0BACE,eAAA,CACA,eAAA",sourcesContent:['@import "./variablesAndFunctions";\n\n.moduleBackground {\n  @include flexCenter(row);\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.module {\n  font-size: larger;\n  background-color: white;\n  height: 75vh;\n  width: 75vw;\n  color: black;\n  padding: 10px;\n  line-height: 2rem;\n  div {\n    display: block;\n    label {\n      display: block;\n    }\n    input {\n      height: 1.75rem;\n      width: 80%;\n      margin-bottom: 2rem;\n    }\n    textarea {\n      padding: 5px;\n      resize: none;\n      width: calc(100% - 10px);\n      height: 20rem;\n    }\n    button {\n      width: 10rem;\n      padding: 1rem;\n      margin-top: 2rem;\n    }\n  }\n  .buttons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n','$footerBackground: black;\n\n@mixin flexCenter($direction) {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: $direction;\n}\n\n$font-weights: (\n  "light": 300,\n  "regular": 400,\n  "medium": 500,\n  "bold": 700,\n);\n\n@function weight($weight-name) {\n  @return map-get($map: $font-weights, $key: $weight-name);\n}\n','@import "./variablesAndFunctions";\n\n.module-search {\n  font-size: larger;\n  background-color: white;\n  height: 75vh;\n  width: 75vw;\n  color: black;\n  padding: 10px;\n  line-height: 2rem;\n  textarea {\n    padding: 5px;\n    resize: none;\n    height: 80%;\n    width: 100%;\n  }\n  button {\n    width: 10rem;\n    padding: 1rem;\n    margin-top: 2rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n','@import "./variablesAndFunctions";\n\n.module-meta {\n  font-size: larger;\n  background-color: white;\n  height: 75vh;\n  width: 75vw;\n  color: black;\n  padding: 10px;\n  line-height: 2rem;\n  textarea {\n    padding: 5px;\n    resize: none;\n    height: 80%;\n    width: 100%;\n  }\n  button {\n    width: 10rem;\n    padding: 1rem;\n    margin-top: 2rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n','@import "./scss/keywordModule";\n@import "./scss/variablesAndFunctions";\n@import "./scss/searchModule";\n@import "./scss/moduleMetaDescription";\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nheader {\n  @include flexCenter(row);\n  position: relative;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  min-height: 10vh;\n  background-color: rgb(184, 182, 182);\n  font-size: xx-large;\n  font-weight: weight(bold);\n}\n\n#display {\n  position: relative;\n  width: 100vw;\n  min-height: 85vh;\n  background-color: antiquewhite;\n}\n\n.footer {\n  @include flexCenter(row);\n  position: relative;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  height: 5vh;\n  background-color: $footerBackground;\n  color: white;\n  font-weight: weight(light);\n  font-size: x-small;\n}\n\n.commandBtns {\n  display: flex;\n  justify-content: space-evenly;\n\n  .moduleBtn {\n    height: 3rem;\n    font-size: medium;\n    padding: 5px 10px;\n    margin: 10px;\n  }\n}\n.companyName {\n  padding: 10px;\n  line-height: 1.5;\n}\n\n.keywordsToSearch {\n  padding: 10px;\n  line-height: 1.5;\n}\n\n.docToSearch {\n  padding: 10px;\n  line-height: 1.5;\n}\n\n.metaDescription {\n  padding: 10px;\n  line-height: 1.5;\n}\n\n.resultBtnDiv {\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  .resultBtn {\n    height: 3rem;\n    font-size: medium;\n    padding: 5px 10px;\n    margin: 10px;\n    button {\n      margin: auto;\n    }\n  }\n}\n.resultsParagraphDiv {\n  display: flex;\n  justify-content: center;\n  padding-bottom: 25px;\n  p {\n    white-space: pre;\n    line-height: 1.5;\n  }\n  .resultsParagraphKeywords {\n    text-align: center;\n  }\n\n  .resultsParagraphNumbers {\n    padding-right: 10px;\n    text-align: right;\n  }\n  .resultsParagraphFillerNumbers {\n    padding-left: 10px;\n    text-align: left;\n  }\n  .resultsParagraphCompanyName {\n    padding-left: 10px;\n  }\n}\n\n.resultsParagraphDivTwo {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 25px;\n  p {\n    white-space: pre;\n    line-height: 1.5;\n  }\n}\n'],sourceRoot:""}]);const a=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,A,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(i[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),A&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=A):l[4]="".concat(A)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(A," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],a=0;a<e.length;a++){var c=e[a],s=r.base?c[0]+r.base:c[0],l=o[s]||0,d="".concat(s," ").concat(l);o[s]=l+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var C=A(p,r);r.byIndex=a,n.splice(a,0,{identifier:d,updater:C,references:1})}i.push(d)}return i}function A(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,A){var o=r(e=e||[],A=A||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var a=t(o[i]);n[a].references--}for(var c=r(e,A),s=0;s<o.length;s++){var l=t(o[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var A=void 0!==t.layer;A&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,A&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var A=n[r];if(void 0!==A)return A.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;var r={};(()=>{t.d(r,{v:()=>I});var e=t(379),n=t.n(e),A=t(795),o=t.n(A),i=t(569),a=t.n(i),c=t(565),s=t.n(c),l=t(216),d=t.n(l),u=t(589),p=t.n(u),C=t(192),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=a().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=d(),n()(C.Z,h),C.Z&&C.Z.locals&&C.Z.locals;class m{constructor(e){this.keyword=e,this.numberOfMatches=null}get name(){return this.keyword}set matches(e){null===e&&(e=0),this.numberOfMatches=e}get matches(){return this.numberOfMatches}get matchString(){return`${this.keyword} was matched ${this.numberOfMatches} times in the article`}}let g,f=[];const v=document.querySelector("body"),y=document.querySelector(".mainKeywords");function x(e){const n=I("button");return n.id=`module${e}`,n.textContent=`${e}`,n}function b(){(function(){const e=document.getElementById("keywords").value;f=e.split("\n"),function(e){for(let n=0;n<e.length;n++){let t=/[a-z]|[A-Z]/;e[n].match(t)||(e.splice(n,1),n--)}}(f),f=function(e){const n=[];return e.forEach((e=>{const t=new m(e);n.push(t)})),n}(f),y.textContent=function(e){let n=[];return e.forEach((e=>{n.push(` ${e.name}`)})),n}(f)})(),function(){let e=document.getElementById("companyName").value;e.length<=1&&(e="No Name Defined"),g=new m(e),document.querySelector(".companyNameKeyword").textContent=g.name}(),w()}function w(){const e=document.querySelector(".moduleBackground");v.removeChild(e)}const B=document.querySelector("body"),k=document.querySelector(".mainSearchText");let E="";function S(e){const n=I("button");return n.id=`module${e}`,n.textContent=`${e}`,n}function j(){const e=document.querySelector(".moduleBackground");B.removeChild(e)}function F(){E="";const e=document.getElementById("search").value;E=e,k.textContent=E,j()}const q=document.querySelector("body"),P=document.querySelector(".metaDescriptionText");let D;function M(e){const n=I("button");return n.id=`module${e}`,n.textContent=`${e}`,n}function N(){const e=document.querySelector(".moduleBackground");q.removeChild(e)}function $(){D="",D=document.getElementById("meta").value,P.textContent=D,N()}function W(e){let n,t=Array.isArray(e)?[]:{};for(const r in e)n=e[r],t[r]="object"==typeof n?W(n):n;return t}function z(e){let n=W(e),t=0;return e.forEach((r=>{if(null!==r){for(let A=0;A<e.length;A++)if(null!==e[A]&&r[0]!==e[A][0]&&new RegExp(`${r[0]}`,"gmi").test(e[A][0])){let r=e[A].length;n[t].splice(0,r)}t++}})),n}function Y(){let e=function(e,n){for(let t=0;t<e.length;t++)null!==e[t]&&(n[t]-=e[t].length);return n}(function(){const e=[];return f.forEach((n=>{const t=new RegExp(`${n.keyword}`,"gmi"),r=E.match(t);e.push(r)})),function(e){let n=0;f.forEach((t=>{void 0===e[n].length?t.matches=0:t.matches=e[n].length,n++}))}(z(e)),e}(),function(){let e=function(){let e=[];return f.forEach((n=>{let t=n.name.split(" ");const r=t.length;if(1!==r){for(let e=r-1;e>0;e--)t.splice(e,0,"(\\b\\w{0,25}\\b)?");e.push(t.join("\\s?"))}})),e}(),n=[];return e.forEach((e=>{const t=new RegExp(`${e}`,"gmi");let r=E.match(t);null===r&&(r=[]),n.push(r.length)})),n}()),n=function(){const e=new RegExp(`${g.name}`,"gmi");let n=E.match(e);return null===n&&(n=0),n}();const t=E.match(/\b\S+\b/g).length,r=D.split("").length;e.splice(0,0,"Additional Times Used With a Filler Word");const A=["Keyword Used"],o=["Number of Times Used Independently"];f.forEach((e=>{A.push(e.name),o.push(e.matches)})),document.querySelector(".resultsParagraphKeywords").textContent=A.join("\r\n"),document.querySelector(".resultsParagraphNumbers").textContent=o.join("\r\n"),document.querySelector(".resultsParagraphCompanyName").textContent=`Company Name: *${g.name}* is used ${n.length} times`,document.querySelector(".resultsParagraphWordCount").textContent=`WordCount for the document is: ${t}`,document.querySelector(".resultsParagraphMetaChars").textContent=`The Meta Description contains: ${r} characters.`,document.querySelector(".resultsParagraphFillerNumbers").textContent=e.join("\r\n")}document.getElementById("display");const T=document.querySelector(".commandBtns");function U(){!function(){const e=I("div","moduleBackground",""),n=I("div","module",'<div><label for="companyName">Company Name:</label><input type="text" name="companyName" id="companyName"></div><div><label for="keywords">Enter keywords, separated by line break (press enter)</label><textarea name="keywords"id="keywords"placeholder="keyword one &#10keyword two &#10keyword three &#10etc.."></textarea></div>'),t=I("div","buttons","");t.appendChild(function(){const e=x("Ok");return e.addEventListener("click",b),e}()),t.appendChild(function(){const e=x("Cancel");return e.addEventListener("click",w),e}()),n.appendChild(t),e.appendChild(n),v.appendChild(e)}()}function L(){!function(){const e=I("div","moduleBackground",""),n=I("div","module-search",'<textarea name="search" id="search" placeholder="paste document to search in here and press OK"></textarea>'),t=I("div","buttons","");t.appendChild(function(){const e=S("Ok");return e.addEventListener("click",F),e}()),t.appendChild(function(){const e=S("Cancel");return e.addEventListener("click",j),e}()),n.appendChild(t),e.appendChild(n),B.appendChild(e)}()}function G(){!function(){const e=I("div","moduleBackground",""),n=I("div","module-meta",'<textarea name="meta" id="meta" placeholder="paste Meta Description here and press OK"></textarea>'),t=I("div","buttons","");t.appendChild(function(){const e=M("Ok");return e.addEventListener("click",$),e}()),t.appendChild(function(){const e=M("Cancel");return e.addEventListener("click",N),e}()),n.appendChild(t),e.appendChild(n),q.appendChild(e)}()}function I(e,n,t){const r=document.createElement(e);return r.classList.add(n),r.innerHTML=t,r}!function(){const e=I("button","moduleBtn","Click me to add keywords!");e.addEventListener("click",U),T.appendChild(e)}(),function(){const e=I("button","moduleBtn","Click me to add text to search!");e.addEventListener("click",L),T.appendChild(e)}(),function(){const e=I("button","resultBtn","Click me for the results!");e.addEventListener("click",Y),document.querySelector(".resultBtnDiv").appendChild(e)}(),function(){const e=I("button","moduleBtn","Click me to add the Meta Description!");e.addEventListener("click",G),T.appendChild(e)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFXRCxVQUFZQSxFQUNoQkMsR0FJVCxXQUNFLE1BQU1HLEVBQVlqRixFQUNoQixTQUNBLFlBQ0EsNkJBRXFCaUYsRUEzQm5CZCxpQkFBaUIsUUFBU0YsR0E0QjlCRCxFQUFXckgsWUFBWXNJLEdBMkJ6QkMsR0F2QkEsV0FDRSxNQUFNRCxFQUFZakYsRUFDaEIsU0FDQSxZQUNBLG1DQUV3QmlGLEVBakN0QmQsaUJBQWlCLFFBQVNJLEdBa0M5QlAsRUFBV3JILFlBQVlzSSxHQWlCekJFLEdEK0ZBLFdBQ0UsTUFBTUMsRUFBWXBGLEVBQ2hCLFNBQ0EsWUFDQSw2QkFFYW9GLEVBVlhqQixpQkFBaUIsUUFBU3hCLEdBVzlCekcsU0FBU0MsY0FBYyxpQkFBaUJRLFlBQVl5SSxHQ3JHdERDLEdBZEEsV0FDRSxNQUFNSixFQUFZakYsRUFDaEIsU0FDQSxZQUNBLHlDQUV5QmlGLEVBeEN2QmQsaUJBQWlCLFFBQVNNLEdBeUM5QlQsRUFBV3JILFlBQVlzSSxHQVF6QkssSSIsInNvdXJjZXMiOlsid2VicGFjazovL2tleXdvcmQtc2VhcmNoZXIvLi9zcmMvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly9rZXl3b3JkLXNlYXJjaGVyLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9rZXl3b3JkLXNlYXJjaGVyLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8va2V5d29yZC1zZWFyY2hlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9rZXl3b3JkLXNlYXJjaGVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9rZXl3b3JkLXNlYXJjaGVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2tleXdvcmQtc2VhcmNoZXIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8va2V5d29yZC1zZWFyY2hlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2tleXdvcmQtc2VhcmNoZXIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9rZXl3b3JkLXNlYXJjaGVyL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2tleXdvcmQtc2VhcmNoZXIvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8va2V5d29yZC1zZWFyY2hlci93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8va2V5d29yZC1zZWFyY2hlci93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2tleXdvcmQtc2VhcmNoZXIvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2tleXdvcmQtc2VhcmNoZXIvLi9zcmMvc3R5bGUuc2Nzcz83NWJhIiwid2VicGFjazovL2tleXdvcmQtc2VhcmNoZXIvLi9zcmMvc2NyaXB0cy9rZXl3b3JkQ2xhc3MuanMiLCJ3ZWJwYWNrOi8va2V5d29yZC1zZWFyY2hlci8uL3NyYy9zY3JpcHRzL2tleXdvcmRNb2R1bGUiLCJ3ZWJwYWNrOi8va2V5d29yZC1zZWFyY2hlci8uL3NyYy9zY3JpcHRzL3NlYXJjaERvY3VtZW50TW9kdWxlLmpzIiwid2VicGFjazovL2tleXdvcmQtc2VhcmNoZXIvLi9zcmMvc2NyaXB0cy9tZXRhRGVzY3JpcHRpb24uanMiLCJ3ZWJwYWNrOi8va2V5d29yZC1zZWFyY2hlci8uL3NyYy9zY3JpcHRzL3Jlc3VsdHMuanMiLCJ3ZWJwYWNrOi8va2V5d29yZC1zZWFyY2hlci8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5tb2R1bGVCYWNrZ3JvdW5ke2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtmbGV4LWRpcmVjdGlvbjpyb3c7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3dpZHRoOjEwMHZ3O2hlaWdodDoxMDB2aDtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjUpfS5tb2R1bGV7Zm9udC1zaXplOmxhcmdlcjtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7aGVpZ2h0Ojc1dmg7d2lkdGg6NzV2dztjb2xvcjojMDAwO3BhZGRpbmc6MTBweDtsaW5lLWhlaWdodDoycmVtfS5tb2R1bGUgZGl2e2Rpc3BsYXk6YmxvY2t9Lm1vZHVsZSBkaXYgbGFiZWx7ZGlzcGxheTpibG9ja30ubW9kdWxlIGRpdiBpbnB1dHtoZWlnaHQ6MS43NXJlbTt3aWR0aDo4MCU7bWFyZ2luLWJvdHRvbToycmVtfS5tb2R1bGUgZGl2IHRleHRhcmVhe3BhZGRpbmc6NXB4O3Jlc2l6ZTpub25lO3dpZHRoOmNhbGMoMTAwJSAtIDEwcHgpO2hlaWdodDoyMHJlbX0ubW9kdWxlIGRpdiBidXR0b257d2lkdGg6MTByZW07cGFkZGluZzoxcmVtO21hcmdpbi10b3A6MnJlbX0ubW9kdWxlIC5idXR0b25ze2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtZXZlbmx5O2FsaWduLWl0ZW1zOmNlbnRlcn0ubW9kdWxlLXNlYXJjaHtmb250LXNpemU6bGFyZ2VyO2JhY2tncm91bmQtY29sb3I6I2ZmZjtoZWlnaHQ6NzV2aDt3aWR0aDo3NXZ3O2NvbG9yOiMwMDA7cGFkZGluZzoxMHB4O2xpbmUtaGVpZ2h0OjJyZW19Lm1vZHVsZS1zZWFyY2ggdGV4dGFyZWF7cGFkZGluZzo1cHg7cmVzaXplOm5vbmU7aGVpZ2h0OjgwJTt3aWR0aDoxMDAlfS5tb2R1bGUtc2VhcmNoIGJ1dHRvbnt3aWR0aDoxMHJlbTtwYWRkaW5nOjFyZW07bWFyZ2luLXRvcDoycmVtfS5tb2R1bGUtc2VhcmNoIC5idXR0b25ze2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtZXZlbmx5O2FsaWduLWl0ZW1zOmNlbnRlcn0ubW9kdWxlLW1ldGF7Zm9udC1zaXplOmxhcmdlcjtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7aGVpZ2h0Ojc1dmg7d2lkdGg6NzV2dztjb2xvcjojMDAwO3BhZGRpbmc6MTBweDtsaW5lLWhlaWdodDoycmVtfS5tb2R1bGUtbWV0YSB0ZXh0YXJlYXtwYWRkaW5nOjVweDtyZXNpemU6bm9uZTtoZWlnaHQ6ODAlO3dpZHRoOjEwMCV9Lm1vZHVsZS1tZXRhIGJ1dHRvbnt3aWR0aDoxMHJlbTtwYWRkaW5nOjFyZW07bWFyZ2luLXRvcDoycmVtfS5tb2R1bGUtbWV0YSAuYnV0dG9uc3tkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OnNwYWNlLWV2ZW5seTthbGlnbi1pdGVtczpjZW50ZXJ9Kntib3gtc2l6aW5nOmJvcmRlci1ib3g7bWFyZ2luOjA7cGFkZGluZzowfWhlYWRlcntkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7ZmxleC1kaXJlY3Rpb246cm93O3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDowO2xlZnQ6MDt3aWR0aDoxMDB2dzttaW4taGVpZ2h0OjEwdmg7YmFja2dyb3VuZC1jb2xvcjojYjhiNmI2O2ZvbnQtc2l6ZTp4eC1sYXJnZTtmb250LXdlaWdodDo3MDB9I2Rpc3BsYXl7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwdnc7bWluLWhlaWdodDo4NXZoO2JhY2tncm91bmQtY29sb3I6I2ZhZWJkN30uZm9vdGVye2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtmbGV4LWRpcmVjdGlvbjpyb3c7cG9zaXRpb246cmVsYXRpdmU7Ym90dG9tOjA7bGVmdDowO3dpZHRoOjEwMHZ3O2hlaWdodDo1dmg7YmFja2dyb3VuZC1jb2xvcjojMDAwO2NvbG9yOiNmZmY7Zm9udC13ZWlnaHQ6MzAwO2ZvbnQtc2l6ZTp4LXNtYWxsfS5jb21tYW5kQnRuc3tkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OnNwYWNlLWV2ZW5seX0uY29tbWFuZEJ0bnMgLm1vZHVsZUJ0bntoZWlnaHQ6M3JlbTtmb250LXNpemU6bWVkaXVtO3BhZGRpbmc6NXB4IDEwcHg7bWFyZ2luOjEwcHh9LmNvbXBhbnlOYW1le3BhZGRpbmc6MTBweDtsaW5lLWhlaWdodDoxLjV9LmtleXdvcmRzVG9TZWFyY2h7cGFkZGluZzoxMHB4O2xpbmUtaGVpZ2h0OjEuNX0uZG9jVG9TZWFyY2h7cGFkZGluZzoxMHB4O2xpbmUtaGVpZ2h0OjEuNX0ubWV0YURlc2NyaXB0aW9ue3BhZGRpbmc6MTBweDtsaW5lLWhlaWdodDoxLjV9LnJlc3VsdEJ0bkRpdntkaXNwbGF5OmZsZXg7YWxpZ24tY29udGVudDpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn0ucmVzdWx0QnRuRGl2IC5yZXN1bHRCdG57aGVpZ2h0OjNyZW07Zm9udC1zaXplOm1lZGl1bTtwYWRkaW5nOjVweCAxMHB4O21hcmdpbjoxMHB4fS5yZXN1bHRCdG5EaXYgLnJlc3VsdEJ0biBidXR0b257bWFyZ2luOmF1dG99LnJlc3VsdHNQYXJhZ3JhcGhEaXZ7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7cGFkZGluZy1ib3R0b206MjVweH0ucmVzdWx0c1BhcmFncmFwaERpdiBwe3doaXRlLXNwYWNlOnByZTtsaW5lLWhlaWdodDoxLjV9LnJlc3VsdHNQYXJhZ3JhcGhEaXYgLnJlc3VsdHNQYXJhZ3JhcGhLZXl3b3Jkc3t0ZXh0LWFsaWduOmNlbnRlcn0ucmVzdWx0c1BhcmFncmFwaERpdiAucmVzdWx0c1BhcmFncmFwaE51bWJlcnN7cGFkZGluZy1yaWdodDoxMHB4O3RleHQtYWxpZ246cmlnaHR9LnJlc3VsdHNQYXJhZ3JhcGhEaXYgLnJlc3VsdHNQYXJhZ3JhcGhGaWxsZXJOdW1iZXJze3BhZGRpbmctbGVmdDoxMHB4O3RleHQtYWxpZ246bGVmdH0ucmVzdWx0c1BhcmFncmFwaERpdiAucmVzdWx0c1BhcmFncmFwaENvbXBhbnlOYW1le3BhZGRpbmctbGVmdDoxMHB4fS5yZXN1bHRzUGFyYWdyYXBoRGl2VHdve2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1ib3R0b206MjVweH0ucmVzdWx0c1BhcmFncmFwaERpdlR3byBwe3doaXRlLXNwYWNlOnByZTtsaW5lLWhlaWdodDoxLjV9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3Njc3MvX2tleXdvcmRNb2R1bGUuc2Nzc1wiLFwid2VicGFjazovLy4vc3JjL3Njc3MvX3ZhcmlhYmxlc0FuZEZ1bmN0aW9ucy5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9zcmMvc2Nzcy9fc2VhcmNoTW9kdWxlLnNjc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9zY3NzL19tb2R1bGVNZXRhRGVzY3JpcHRpb24uc2Nzc1wiLFwid2VicGFjazovLy4vc3JjL3N0eWxlLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUEsa0JDQ0UsWUFBQSxDQUNBLHNCQUFBLENBQ0Esa0JBQUEsQ0FDQSxrQkRIb0IsQ0FDcEIsaUJBQUEsQ0FDQSxLQUFBLENBQ0EsTUFBQSxDQUNBLFdBQUEsQ0FDQSxZQUFBLENBQ0EsK0JBQUEsQ0FHRixRQUNFLGdCQUFBLENBQ0EscUJBQUEsQ0FDQSxXQUFBLENBQ0EsVUFBQSxDQUNBLFVBQUEsQ0FDQSxZQUFBLENBQ0EsZ0JBQUEsQ0FDQSxZQUNFLGFBQUEsQ0FDQSxrQkFDRSxhQUFBLENBRUYsa0JBQ0UsY0FBQSxDQUNBLFNBQUEsQ0FDQSxrQkFBQSxDQUVGLHFCQUNFLFdBQUEsQ0FDQSxXQUFBLENBQ0EsdUJBQUEsQ0FDQSxZQUFBLENBRUYsbUJBQ0UsV0FBQSxDQUNBLFlBQUEsQ0FDQSxlQUFBLENBR0osaUJBQ0UsWUFBQSxDQUNBLDRCQUFBLENBQ0Esa0JBQUEsQ0UzQ0osZUFDRSxnQkFBQSxDQUNBLHFCQUFBLENBQ0EsV0FBQSxDQUNBLFVBQUEsQ0FDQSxVQUFBLENBQ0EsWUFBQSxDQUNBLGdCQUFBLENBQ0Esd0JBQ0UsV0FBQSxDQUNBLFdBQUEsQ0FDQSxVQUFBLENBQ0EsVUFBQSxDQUVGLHNCQUNFLFdBQUEsQ0FDQSxZQUFBLENBQ0EsZUFBQSxDQUVGLHdCQUNFLFlBQUEsQ0FDQSw0QkFBQSxDQUNBLGtCQUFBLENDdEJKLGFBQ0UsZ0JBQUEsQ0FDQSxxQkFBQSxDQUNBLFdBQUEsQ0FDQSxVQUFBLENBQ0EsVUFBQSxDQUNBLFlBQUEsQ0FDQSxnQkFBQSxDQUNBLHNCQUNFLFdBQUEsQ0FDQSxXQUFBLENBQ0EsVUFBQSxDQUNBLFVBQUEsQ0FFRixvQkFDRSxXQUFBLENBQ0EsWUFBQSxDQUNBLGVBQUEsQ0FFRixzQkFDRSxZQUFBLENBQ0EsNEJBQUEsQ0FDQSxrQkFBQSxDQ3BCSixFQUNFLHFCQUFBLENBQ0EsUUFBQSxDQUNBLFNBQUEsQ0FHRixPSFBFLFlBQUEsQ0FDQSxzQkFBQSxDQUNBLGtCQUFBLENBQ0Esa0JHS29CLENBQ3BCLGlCQUFBLENBQ0EsS0FBQSxDQUNBLE1BQUEsQ0FDQSxXQUFBLENBQ0EsZUFBQSxDQUNBLHdCQUFBLENBQ0Esa0JBQUEsQ0FDQSxlQUFBLENBR0YsU0FDRSxpQkFBQSxDQUNBLFdBQUEsQ0FDQSxlQUFBLENBQ0Esd0JBQUEsQ0FHRixRSDFCRSxZQUFBLENBQ0Esc0JBQUEsQ0FDQSxrQkFBQSxDQUNBLGtCR3dCb0IsQ0FDcEIsaUJBQUEsQ0FDQSxRQUFBLENBQ0EsTUFBQSxDQUNBLFdBQUEsQ0FDQSxVQUFBLENBQ0EscUJIcENpQixDR3FDakIsVUFBQSxDQUNBLGVBQUEsQ0FDQSxpQkFBQSxDQUdGLGFBQ0UsWUFBQSxDQUNBLDRCQUFBLENBRUEsd0JBQ0UsV0FBQSxDQUNBLGdCQUFBLENBQ0EsZ0JBQUEsQ0FDQSxXQUFBLENBR0osYUFDRSxZQUFBLENBQ0EsZUFBQSxDQUdGLGtCQUNFLFlBQUEsQ0FDQSxlQUFBLENBR0YsYUFDRSxZQUFBLENBQ0EsZUFBQSxDQUdGLGlCQUNFLFlBQUEsQ0FDQSxlQUFBLENBR0YsY0FDRSxZQUFBLENBQ0Esb0JBQUEsQ0FDQSxzQkFBQSxDQUNBLHlCQUNFLFdBQUEsQ0FDQSxnQkFBQSxDQUNBLGdCQUFBLENBQ0EsV0FBQSxDQUNBLGdDQUNFLFdBQUEsQ0FJTixxQkFDRSxZQUFBLENBQ0Esc0JBQUEsQ0FDQSxtQkFBQSxDQUNBLHVCQUNFLGVBQUEsQ0FDQSxlQUFBLENBRUYsK0NBQ0UsaUJBQUEsQ0FHRiw4Q0FDRSxrQkFBQSxDQUNBLGdCQUFBLENBRUYsb0RBQ0UsaUJBQUEsQ0FDQSxlQUFBLENBRUYsa0RBQ0UsaUJBQUEsQ0FJSix3QkFDRSxZQUFBLENBQ0EscUJBQUEsQ0FDQSxzQkFBQSxDQUNBLGtCQUFBLENBQ0EsbUJBQUEsQ0FDQSwwQkFDRSxlQUFBLENBQ0EsZUFBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IFxcXCIuL3ZhcmlhYmxlc0FuZEZ1bmN0aW9uc1xcXCI7XFxuXFxuLm1vZHVsZUJhY2tncm91bmQge1xcbiAgQGluY2x1ZGUgZmxleENlbnRlcihyb3cpO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGhlaWdodDogMTAwdmg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XFxufVxcblxcbi5tb2R1bGUge1xcbiAgZm9udC1zaXplOiBsYXJnZXI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGhlaWdodDogNzV2aDtcXG4gIHdpZHRoOiA3NXZ3O1xcbiAgY29sb3I6IGJsYWNrO1xcbiAgcGFkZGluZzogMTBweDtcXG4gIGxpbmUtaGVpZ2h0OiAycmVtO1xcbiAgZGl2IHtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICAgIGxhYmVsIHtcXG4gICAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgfVxcbiAgICBpbnB1dCB7XFxuICAgICAgaGVpZ2h0OiAxLjc1cmVtO1xcbiAgICAgIHdpZHRoOiA4MCU7XFxuICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcXG4gICAgfVxcbiAgICB0ZXh0YXJlYSB7XFxuICAgICAgcGFkZGluZzogNXB4O1xcbiAgICAgIHJlc2l6ZTogbm9uZTtcXG4gICAgICB3aWR0aDogY2FsYygxMDAlIC0gMTBweCk7XFxuICAgICAgaGVpZ2h0OiAyMHJlbTtcXG4gICAgfVxcbiAgICBidXR0b24ge1xcbiAgICAgIHdpZHRoOiAxMHJlbTtcXG4gICAgICBwYWRkaW5nOiAxcmVtO1xcbiAgICAgIG1hcmdpbi10b3A6IDJyZW07XFxuICAgIH1cXG4gIH1cXG4gIC5idXR0b25zIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICB9XFxufVxcblwiLFwiJGZvb3RlckJhY2tncm91bmQ6IGJsYWNrO1xcblxcbkBtaXhpbiBmbGV4Q2VudGVyKCRkaXJlY3Rpb24pIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBmbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcXG59XFxuXFxuJGZvbnQtd2VpZ2h0czogKFxcbiAgXFxcImxpZ2h0XFxcIjogMzAwLFxcbiAgXFxcInJlZ3VsYXJcXFwiOiA0MDAsXFxuICBcXFwibWVkaXVtXFxcIjogNTAwLFxcbiAgXFxcImJvbGRcXFwiOiA3MDAsXFxuKTtcXG5cXG5AZnVuY3Rpb24gd2VpZ2h0KCR3ZWlnaHQtbmFtZSkge1xcbiAgQHJldHVybiBtYXAtZ2V0KCRtYXA6ICRmb250LXdlaWdodHMsICRrZXk6ICR3ZWlnaHQtbmFtZSk7XFxufVxcblwiLFwiQGltcG9ydCBcXFwiLi92YXJpYWJsZXNBbmRGdW5jdGlvbnNcXFwiO1xcblxcbi5tb2R1bGUtc2VhcmNoIHtcXG4gIGZvbnQtc2l6ZTogbGFyZ2VyO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICBoZWlnaHQ6IDc1dmg7XFxuICB3aWR0aDogNzV2dztcXG4gIGNvbG9yOiBibGFjaztcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBsaW5lLWhlaWdodDogMnJlbTtcXG4gIHRleHRhcmVhIHtcXG4gICAgcGFkZGluZzogNXB4O1xcbiAgICByZXNpemU6IG5vbmU7XFxuICAgIGhlaWdodDogODAlO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gIH1cXG4gIGJ1dHRvbiB7XFxuICAgIHdpZHRoOiAxMHJlbTtcXG4gICAgcGFkZGluZzogMXJlbTtcXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcXG4gIH1cXG4gIC5idXR0b25zIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICB9XFxufVxcblwiLFwiQGltcG9ydCBcXFwiLi92YXJpYWJsZXNBbmRGdW5jdGlvbnNcXFwiO1xcblxcbi5tb2R1bGUtbWV0YSB7XFxuICBmb250LXNpemU6IGxhcmdlcjtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgaGVpZ2h0OiA3NXZoO1xcbiAgd2lkdGg6IDc1dnc7XFxuICBjb2xvcjogYmxhY2s7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDJyZW07XFxuICB0ZXh0YXJlYSB7XFxuICAgIHBhZGRpbmc6IDVweDtcXG4gICAgcmVzaXplOiBub25lO1xcbiAgICBoZWlnaHQ6IDgwJTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICB9XFxuICBidXR0b24ge1xcbiAgICB3aWR0aDogMTByZW07XFxuICAgIHBhZGRpbmc6IDFyZW07XFxuICAgIG1hcmdpbi10b3A6IDJyZW07XFxuICB9XFxuICAuYnV0dG9ucyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgfVxcbn1cXG5cIixcIkBpbXBvcnQgXFxcIi4vc2Nzcy9rZXl3b3JkTW9kdWxlXFxcIjtcXG5AaW1wb3J0IFxcXCIuL3Njc3MvdmFyaWFibGVzQW5kRnVuY3Rpb25zXFxcIjtcXG5AaW1wb3J0IFxcXCIuL3Njc3Mvc2VhcmNoTW9kdWxlXFxcIjtcXG5AaW1wb3J0IFxcXCIuL3Njc3MvbW9kdWxlTWV0YURlc2NyaXB0aW9uXFxcIjtcXG4qIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5cXG5oZWFkZXIge1xcbiAgQGluY2x1ZGUgZmxleENlbnRlcihyb3cpO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIG1pbi1oZWlnaHQ6IDEwdmg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTg0LCAxODIsIDE4Mik7XFxuICBmb250LXNpemU6IHh4LWxhcmdlO1xcbiAgZm9udC13ZWlnaHQ6IHdlaWdodChib2xkKTtcXG59XFxuXFxuI2Rpc3BsYXkge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgd2lkdGg6IDEwMHZ3O1xcbiAgbWluLWhlaWdodDogODV2aDtcXG4gIGJhY2tncm91bmQtY29sb3I6IGFudGlxdWV3aGl0ZTtcXG59XFxuXFxuLmZvb3RlciB7XFxuICBAaW5jbHVkZSBmbGV4Q2VudGVyKHJvdyk7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBib3R0b206IDA7XFxuICBsZWZ0OiAwO1xcbiAgd2lkdGg6IDEwMHZ3O1xcbiAgaGVpZ2h0OiA1dmg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZm9vdGVyQmFja2dyb3VuZDtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIGZvbnQtd2VpZ2h0OiB3ZWlnaHQobGlnaHQpO1xcbiAgZm9udC1zaXplOiB4LXNtYWxsO1xcbn1cXG5cXG4uY29tbWFuZEJ0bnMge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xcblxcbiAgLm1vZHVsZUJ0biB7XFxuICAgIGhlaWdodDogM3JlbTtcXG4gICAgZm9udC1zaXplOiBtZWRpdW07XFxuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xcbiAgICBtYXJnaW46IDEwcHg7XFxuICB9XFxufVxcbi5jb21wYW55TmFtZSB7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXG59XFxuXFxuLmtleXdvcmRzVG9TZWFyY2gge1xcbiAgcGFkZGluZzogMTBweDtcXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XFxufVxcblxcbi5kb2NUb1NlYXJjaCB7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXG59XFxuXFxuLm1ldGFEZXNjcmlwdGlvbiB7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXG59XFxuXFxuLnJlc3VsdEJ0bkRpdiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAucmVzdWx0QnRuIHtcXG4gICAgaGVpZ2h0OiAzcmVtO1xcbiAgICBmb250LXNpemU6IG1lZGl1bTtcXG4gICAgcGFkZGluZzogNXB4IDEwcHg7XFxuICAgIG1hcmdpbjogMTBweDtcXG4gICAgYnV0dG9uIHtcXG4gICAgICBtYXJnaW46IGF1dG87XFxuICAgIH1cXG4gIH1cXG59XFxuLnJlc3VsdHNQYXJhZ3JhcGhEaXYge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgcGFkZGluZy1ib3R0b206IDI1cHg7XFxuICBwIHtcXG4gICAgd2hpdGUtc3BhY2U6IHByZTtcXG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcXG4gIH1cXG4gIC5yZXN1bHRzUGFyYWdyYXBoS2V5d29yZHMge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB9XFxuXFxuICAucmVzdWx0c1BhcmFncmFwaE51bWJlcnMge1xcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcXG4gIH1cXG4gIC5yZXN1bHRzUGFyYWdyYXBoRmlsbGVyTnVtYmVycyB7XFxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXG4gIH1cXG4gIC5yZXN1bHRzUGFyYWdyYXBoQ29tcGFueU5hbWUge1xcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XFxuICB9XFxufVxcblxcbi5yZXN1bHRzUGFyYWdyYXBoRGl2VHdvIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgcGFkZGluZy1ib3R0b206IDI1cHg7XFxuICBwIHtcXG4gICAgd2hpdGUtc3BhY2U6IHByZTtcXG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLnNjc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5zY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiY2xhc3Mga2V5d29yZCB7XG4gIGNvbnN0cnVjdG9yKG5hbWUpIHtcbiAgICB0aGlzLmtleXdvcmQgPSBuYW1lO1xuICAgIHRoaXMubnVtYmVyT2ZNYXRjaGVzID0gbnVsbDtcbiAgfVxuXG4gIGdldCBuYW1lKCkge1xuICAgIHJldHVybiB0aGlzLmtleXdvcmQ7XG4gIH1cblxuICBzZXQgbWF0Y2hlcyhudW0pIHtcbiAgICBpZiAobnVtID09PSBudWxsKSB7XG4gICAgICBudW0gPSAwO1xuICAgIH1cbiAgICB0aGlzLm51bWJlck9mTWF0Y2hlcyA9IG51bTtcbiAgfVxuXG4gIGdldCBtYXRjaGVzKCkge1xuICAgIHJldHVybiB0aGlzLm51bWJlck9mTWF0Y2hlcztcbiAgfVxuXG4gIGdldCBtYXRjaFN0cmluZygpIHtcbiAgICByZXR1cm4gYCR7dGhpcy5rZXl3b3JkfSB3YXMgbWF0Y2hlZCAke3RoaXMubnVtYmVyT2ZNYXRjaGVzfSB0aW1lcyBpbiB0aGUgYXJ0aWNsZWA7XG4gIH1cbn1cblxuZXhwb3J0IHsga2V5d29yZCB9O1xuIiwiaW1wb3J0IHsgY3JlYXRlTmV3RWxlbWVudCB9IGZyb20gXCIuLlwiO1xuaW1wb3J0IHsga2V5d29yZCB9IGZyb20gXCIuL2tleXdvcmRDbGFzc1wiO1xuXG4vLyAgd2hlcmUgYWxsIHRoZSBrZXl3b3JkcyBhcmUgc3RvcmVkIGFmdGVyIGhpdHRpbmcgb2tcbmxldCB0aGVDb21wYW55TmFtZTtcbmxldCBhbGxLZXl3b3JkcyA9IFtdO1xuY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpO1xuY29uc3QgYm9keUtleXdvcmRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYWluS2V5d29yZHNcIik7XG5cbi8vICBtYWtlcyBlaXRoZXIgYW4gb2sgb3IgY2FuY2VsIGJ1dHRvblxuZnVuY3Rpb24gY3JlYXRlQnV0dG9uKGlkKSB7XG4gIGNvbnN0IGJ0biA9IGNyZWF0ZU5ld0VsZW1lbnQoXCJidXR0b25cIik7XG4gIGJ0bi5pZCA9IGBtb2R1bGUke2lkfWA7XG4gIGJ0bi50ZXh0Q29udGVudCA9IGAke2lkfWA7XG4gIHJldHVybiBidG47XG59XG5cbi8vICBtYWtlcyBvayBidXR0b24gYW5kIGFkZHMgaXRzIGxpc3RlbmVyXG5mdW5jdGlvbiBva0J1dHRvbigpIHtcbiAgY29uc3QgYnRuID0gY3JlYXRlQnV0dG9uKFwiT2tcIik7XG4gIGJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgY2xpY2tlZE9rKTtcbiAgcmV0dXJuIGJ0bjtcbn1cblxuLy8gcmVtb3ZlZCBibGFuayBhY2NpZGVudGFsIGtleXdvcmRzXG5mdW5jdGlvbiByZW1vdmVCbGFua0tleXdvcmRzKGtleXdvcmRzQXJyYXkpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXl3b3Jkc0FycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IHJlZ0V4ID0gL1thLXpdfFtBLVpdLztcbiAgICBpZiAoa2V5d29yZHNBcnJheVtpXS5tYXRjaChyZWdFeCkpIHtcbiAgICB9IGVsc2Uge1xuICAgICAga2V5d29yZHNBcnJheS5zcGxpY2UoaSwgMSk7XG4gICAgICBpLS07XG4gICAgfVxuICB9XG4gIHJldHVybiBrZXl3b3Jkc0FycmF5O1xufVxuXG4vLyAgY3JlYXRlcyBrZXl3b3JkIGNsYXNzZXMgZm9yIGVhY2gga2V5d29yZCBpbiB0aGUgaW5wdXRcbmZ1bmN0aW9uIGtleXdvcmRDbGFzc2VzKGtleXdvcmRBcnJheSkge1xuICBjb25zdCBuZXdBcnJheSA9IFtdO1xuICBrZXl3b3JkQXJyYXkuZm9yRWFjaCgoa2V5d29yZExpc3RlZCkgPT4ge1xuICAgIGNvbnN0IGtleXdvcmRDbGFzcyA9IG5ldyBrZXl3b3JkKGtleXdvcmRMaXN0ZWQpO1xuICAgIG5ld0FycmF5LnB1c2goa2V5d29yZENsYXNzKTtcbiAgfSk7XG4gIHJldHVybiBuZXdBcnJheTtcbn1cblxuZnVuY3Rpb24ganVzdEtleXdvcmROYW1lcyhvYmplY3RBcnJheSkge1xuICBsZXQga2V5d29yZE5hbWVBcnJheSA9IFtdO1xuICBvYmplY3RBcnJheS5mb3JFYWNoKChrZXl3b3JkKSA9PiB7XG4gICAga2V5d29yZE5hbWVBcnJheS5wdXNoKGAgJHtrZXl3b3JkLm5hbWV9YCk7XG4gIH0pO1xuICByZXR1cm4ga2V5d29yZE5hbWVBcnJheTtcbn1cbi8vIGdldHMga2V5d29yZHMgYW5kIGZvcm1hdHMgdGhlbSBjb3JyZWN0bHkgd2hlbiBwcmVzc2luZyBvayBidXR0b25cbmZ1bmN0aW9uIGZvcm1hdEtleXdvcmRzKCkge1xuICBjb25zdCBrZXl3b3Jkc1RleHRBcmVhID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJrZXl3b3Jkc1wiKTtcbiAgY29uc3QgbmV3S2V5d29yZHMgPSBrZXl3b3Jkc1RleHRBcmVhLnZhbHVlO1xuICBhbGxLZXl3b3JkcyA9IG5ld0tleXdvcmRzLnNwbGl0KFwiXFxuXCIpO1xuICByZW1vdmVCbGFua0tleXdvcmRzKGFsbEtleXdvcmRzKTtcbiAgYWxsS2V5d29yZHMgPSBrZXl3b3JkQ2xhc3NlcyhhbGxLZXl3b3Jkcyk7XG4gIGJvZHlLZXl3b3Jkcy50ZXh0Q29udGVudCA9IGp1c3RLZXl3b3JkTmFtZXMoYWxsS2V5d29yZHMpO1xufVxuXG4vLyBnZXRzIGNvbXBhbnkgbmFtZSBpbmZvIGFuZCBmb3JtYXRzIGl0IGNvcnJlY3RseSBmb3Igc2VhcmNoaW5nXG5mdW5jdGlvbiBmb3JtYXRDb21wYW55TmFtZSgpIHtcbiAgbGV0IGNvbXBhbnlOYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb21wYW55TmFtZVwiKS52YWx1ZTtcbiAgaWYgKGNvbXBhbnlOYW1lLmxlbmd0aCA8PSAxKSB7XG4gICAgY29tcGFueU5hbWUgPSBcIk5vIE5hbWUgRGVmaW5lZFwiO1xuICB9XG4gIHRoZUNvbXBhbnlOYW1lID0gbmV3IGtleXdvcmQoY29tcGFueU5hbWUpO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNvbXBhbnlOYW1lS2V5d29yZFwiKS50ZXh0Q29udGVudCA9XG4gICAgdGhlQ29tcGFueU5hbWUubmFtZTtcbn1cblxuLy8gZXZlbnQgbGlzdGVuZXIgZm9yIGNsaWNraW5nIG9rIGJ1dHRvblxuZnVuY3Rpb24gY2xpY2tlZE9rKCkge1xuICBmb3JtYXRLZXl3b3JkcygpO1xuICBmb3JtYXRDb21wYW55TmFtZSgpO1xuICBjbGlja2VkQ2FuY2VsKCk7XG59XG5cbi8vICBtYWtlcyBjYW5jZWwgYnV0dG9uIGFuZCBhZGRzIGl0cyBsaXN0ZW5lclxuZnVuY3Rpb24gY2FuY2VsQnV0dG9uKCkge1xuICBjb25zdCBidG4gPSBjcmVhdGVCdXR0b24oXCJDYW5jZWxcIik7XG4gIGJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgY2xpY2tlZENhbmNlbCk7XG4gIHJldHVybiBidG47XG59XG5cbi8vIGV2ZW50IGxpc3RlbmVyIGZvciBjbGlja2luZyBvayBidXR0b25cbmZ1bmN0aW9uIGNsaWNrZWRDYW5jZWwoKSB7XG4gIGNvbnN0IG1vZHVsZUJhY2tncm91bmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZHVsZUJhY2tncm91bmRcIik7XG4gIGJvZHkucmVtb3ZlQ2hpbGQobW9kdWxlQmFja2dyb3VuZCk7XG59XG5cbi8vICByZW5kZXJzIHRoZSBtb2R1bGUgdG8gZW50ZXIga2V5d29yZHMuXG5mdW5jdGlvbiByZW5kZXJNb2R1bGUoKSB7XG4gIGNvbnN0IG1vZHVsZUJhY2tncm91bmQgPSBjcmVhdGVOZXdFbGVtZW50KFwiZGl2XCIsIFwibW9kdWxlQmFja2dyb3VuZFwiLCBcIlwiKTtcbiAgY29uc3QgbW9kdWxlID0gY3JlYXRlTmV3RWxlbWVudChcbiAgICBcImRpdlwiLFxuICAgIFwibW9kdWxlXCIsXG4gICAgYDxkaXY+PGxhYmVsIGZvcj1cImNvbXBhbnlOYW1lXCI+Q29tcGFueSBOYW1lOjwvbGFiZWw+PGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cImNvbXBhbnlOYW1lXCIgaWQ9XCJjb21wYW55TmFtZVwiPjwvZGl2PjxkaXY+PGxhYmVsIGZvcj1cImtleXdvcmRzXCI+RW50ZXIga2V5d29yZHMsIHNlcGFyYXRlZCBieSBsaW5lIGJyZWFrIChwcmVzcyBlbnRlcik8L2xhYmVsPjx0ZXh0YXJlYSBuYW1lPVwia2V5d29yZHNcImlkPVwia2V5d29yZHNcInBsYWNlaG9sZGVyPVwia2V5d29yZCBvbmUgJiMxMGtleXdvcmQgdHdvICYjMTBrZXl3b3JkIHRocmVlICYjMTBldGMuLlwiPjwvdGV4dGFyZWE+PC9kaXY+YFxuICApO1xuICBjb25zdCBidXR0b25zID0gY3JlYXRlTmV3RWxlbWVudChcImRpdlwiLCBcImJ1dHRvbnNcIiwgXCJcIik7XG4gIGJ1dHRvbnMuYXBwZW5kQ2hpbGQob2tCdXR0b24oKSk7XG4gIGJ1dHRvbnMuYXBwZW5kQ2hpbGQoY2FuY2VsQnV0dG9uKCkpO1xuICBtb2R1bGUuYXBwZW5kQ2hpbGQoYnV0dG9ucyk7XG4gIG1vZHVsZUJhY2tncm91bmQuYXBwZW5kQ2hpbGQobW9kdWxlKTtcbiAgYm9keS5hcHBlbmRDaGlsZChtb2R1bGVCYWNrZ3JvdW5kKTtcbn1cblxuZXhwb3J0IHsgcmVuZGVyTW9kdWxlLCBhbGxLZXl3b3JkcywgdGhlQ29tcGFueU5hbWUgfTtcbiIsImltcG9ydCB7IGNyZWF0ZU5ld0VsZW1lbnQgfSBmcm9tIFwiLi5cIjtcblxuY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpO1xuY29uc3Qgc2VhcmNoQm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWFpblNlYXJjaFRleHRcIik7XG5sZXQgc2VhcmNoU3RyaW5nID0gXCJcIjtcblxuLy8gIG1ha2VzIGVpdGhlciBhbiBvayBvciBjYW5jZWwgYnV0dG9uXG5mdW5jdGlvbiBjcmVhdGVCdXR0b24oaWQpIHtcbiAgY29uc3QgYnRuID0gY3JlYXRlTmV3RWxlbWVudChcImJ1dHRvblwiKTtcbiAgYnRuLmlkID0gYG1vZHVsZSR7aWR9YDtcbiAgYnRuLnRleHRDb250ZW50ID0gYCR7aWR9YDtcbiAgcmV0dXJuIGJ0bjtcbn1cblxuLy8gIG1ha2VzIG9rIGJ1dHRvbiBhbmQgYWRkcyBpdHMgbGlzdGVuZXJcbmZ1bmN0aW9uIG9rQnV0dG9uKCkge1xuICBjb25zdCBidG4gPSBjcmVhdGVCdXR0b24oXCJPa1wiKTtcbiAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbGlja2VkT2spO1xuICByZXR1cm4gYnRuO1xufVxuXG4vLyBldmVudCBsaXN0ZW5lciBmb3IgY2xpY2tpbmcgb2sgYnV0dG9uXG5mdW5jdGlvbiBjbGlja2VkQ2FuY2VsKCkge1xuICBjb25zdCBtb2R1bGVCYWNrZ3JvdW5kID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2R1bGVCYWNrZ3JvdW5kXCIpO1xuICBib2R5LnJlbW92ZUNoaWxkKG1vZHVsZUJhY2tncm91bmQpO1xufVxuXG4vLyBldmVudCBsaXN0ZW5lciBmb3IgY2xpY2tpbmcgb2sgYnV0dG9uXG5mdW5jdGlvbiBjbGlja2VkT2soKSB7XG4gIHNlYXJjaFN0cmluZyA9IFwiXCI7XG4gIGNvbnN0IHNlYXJjaFRleHRBcmVhID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2hcIikudmFsdWU7XG4gIHNlYXJjaFN0cmluZyA9IHNlYXJjaFRleHRBcmVhO1xuICBzZWFyY2hCb2R5LnRleHRDb250ZW50ID0gc2VhcmNoU3RyaW5nO1xuICBjbGlja2VkQ2FuY2VsKCk7XG59XG5cbi8vICBtYWtlcyBjYW5jZWwgYnV0dG9uIGFuZCBhZGRzIGl0cyBsaXN0ZW5lclxuZnVuY3Rpb24gY2FuY2VsQnV0dG9uKCkge1xuICBjb25zdCBidG4gPSBjcmVhdGVCdXR0b24oXCJDYW5jZWxcIik7XG4gIGJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgY2xpY2tlZENhbmNlbCk7XG4gIHJldHVybiBidG47XG59XG5cbi8vICByZW5kZXJzIHRoZSBtb2R1bGUgdG8gZW50ZXIga2V5d29yZHMuXG5mdW5jdGlvbiByZW5kZXJNb2R1bGVTZWFyY2goKSB7XG4gIGNvbnN0IG1vZHVsZUJhY2tncm91bmQgPSBjcmVhdGVOZXdFbGVtZW50KFwiZGl2XCIsIFwibW9kdWxlQmFja2dyb3VuZFwiLCBcIlwiKTtcbiAgY29uc3QgbW9kdWxlID0gY3JlYXRlTmV3RWxlbWVudChcbiAgICBcImRpdlwiLFxuICAgIFwibW9kdWxlLXNlYXJjaFwiLFxuICAgIGA8dGV4dGFyZWEgbmFtZT1cInNlYXJjaFwiIGlkPVwic2VhcmNoXCIgcGxhY2Vob2xkZXI9XCJwYXN0ZSBkb2N1bWVudCB0byBzZWFyY2ggaW4gaGVyZSBhbmQgcHJlc3MgT0tcIj48L3RleHRhcmVhPmBcbiAgKTtcbiAgY29uc3QgYnV0dG9ucyA9IGNyZWF0ZU5ld0VsZW1lbnQoXCJkaXZcIiwgXCJidXR0b25zXCIsIFwiXCIpO1xuICBidXR0b25zLmFwcGVuZENoaWxkKG9rQnV0dG9uKCkpO1xuICBidXR0b25zLmFwcGVuZENoaWxkKGNhbmNlbEJ1dHRvbigpKTtcbiAgbW9kdWxlLmFwcGVuZENoaWxkKGJ1dHRvbnMpO1xuICBtb2R1bGVCYWNrZ3JvdW5kLmFwcGVuZENoaWxkKG1vZHVsZSk7XG4gIGJvZHkuYXBwZW5kQ2hpbGQobW9kdWxlQmFja2dyb3VuZCk7XG59XG5cbmV4cG9ydCB7IHJlbmRlck1vZHVsZVNlYXJjaCwgc2VhcmNoU3RyaW5nIH07XG4iLCJpbXBvcnQgeyBjcmVhdGVOZXdFbGVtZW50IH0gZnJvbSBcIi4uXCI7XG5cbmNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keVwiKTtcbmNvbnN0IG1ldGFCb2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tZXRhRGVzY3JpcHRpb25UZXh0XCIpO1xubGV0IG1ldGFEZXNjcmlwdGlvblN0cmluZztcblxuLy8gIG1ha2VzIGVpdGhlciBhbiBvayBvciBjYW5jZWwgYnV0dG9uXG5mdW5jdGlvbiBjcmVhdGVCdXR0b24oaWQpIHtcbiAgY29uc3QgYnRuID0gY3JlYXRlTmV3RWxlbWVudChcImJ1dHRvblwiKTtcbiAgYnRuLmlkID0gYG1vZHVsZSR7aWR9YDtcbiAgYnRuLnRleHRDb250ZW50ID0gYCR7aWR9YDtcbiAgcmV0dXJuIGJ0bjtcbn1cblxuLy8gZXZlbnQgbGlzdGVuZXIgZm9yIGNsaWNraW5nIG9rIGJ1dHRvblxuZnVuY3Rpb24gY2xpY2tlZENhbmNlbCgpIHtcbiAgY29uc3QgbW9kdWxlQmFja2dyb3VuZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kdWxlQmFja2dyb3VuZFwiKTtcbiAgYm9keS5yZW1vdmVDaGlsZChtb2R1bGVCYWNrZ3JvdW5kKTtcbn1cblxuLy8gZXZlbnQgbGlzdGVuZXIgZm9yIGNsaWNraW5nIG9rIGJ1dHRvblxuZnVuY3Rpb24gY2xpY2tlZE9rKCkge1xuICBtZXRhRGVzY3JpcHRpb25TdHJpbmcgPSBcIlwiO1xuICBtZXRhRGVzY3JpcHRpb25TdHJpbmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1ldGFcIikudmFsdWU7XG4gIG1ldGFCb2R5LnRleHRDb250ZW50ID0gbWV0YURlc2NyaXB0aW9uU3RyaW5nO1xuXG4gIGNsaWNrZWRDYW5jZWwoKTtcbn1cblxuLy8gIG1ha2VzIGNhbmNlbCBidXR0b24gYW5kIGFkZHMgaXRzIGxpc3RlbmVyXG5mdW5jdGlvbiBjYW5jZWxCdXR0b24oKSB7XG4gIGNvbnN0IGJ0biA9IGNyZWF0ZUJ1dHRvbihcIkNhbmNlbFwiKTtcbiAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbGlja2VkQ2FuY2VsKTtcbiAgcmV0dXJuIGJ0bjtcbn1cblxuLy8gIG1ha2VzIG9rIGJ1dHRvbiBhbmQgYWRkcyBpdHMgbGlzdGVuZXJcbmZ1bmN0aW9uIG9rQnV0dG9uKCkge1xuICBjb25zdCBidG4gPSBjcmVhdGVCdXR0b24oXCJPa1wiKTtcbiAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbGlja2VkT2spO1xuICByZXR1cm4gYnRuO1xufVxuXG4vLyAgcmVuZGVycyB0aGUgbW9kdWxlIHRvIGVudGVyIGtleXdvcmRzLlxuZnVuY3Rpb24gcmVuZGVyTW9kdWxlTWV0YURlc2NyaXB0aW9uKCkge1xuICBjb25zdCBtb2R1bGVCYWNrZ3JvdW5kID0gY3JlYXRlTmV3RWxlbWVudChcImRpdlwiLCBcIm1vZHVsZUJhY2tncm91bmRcIiwgXCJcIik7XG4gIGNvbnN0IG1vZHVsZSA9IGNyZWF0ZU5ld0VsZW1lbnQoXG4gICAgXCJkaXZcIixcbiAgICBcIm1vZHVsZS1tZXRhXCIsXG4gICAgYDx0ZXh0YXJlYSBuYW1lPVwibWV0YVwiIGlkPVwibWV0YVwiIHBsYWNlaG9sZGVyPVwicGFzdGUgTWV0YSBEZXNjcmlwdGlvbiBoZXJlIGFuZCBwcmVzcyBPS1wiPjwvdGV4dGFyZWE+YFxuICApO1xuICBjb25zdCBidXR0b25zID0gY3JlYXRlTmV3RWxlbWVudChcImRpdlwiLCBcImJ1dHRvbnNcIiwgXCJcIik7XG4gIGJ1dHRvbnMuYXBwZW5kQ2hpbGQob2tCdXR0b24oKSk7XG4gIGJ1dHRvbnMuYXBwZW5kQ2hpbGQoY2FuY2VsQnV0dG9uKCkpO1xuICBtb2R1bGUuYXBwZW5kQ2hpbGQoYnV0dG9ucyk7XG4gIG1vZHVsZUJhY2tncm91bmQuYXBwZW5kQ2hpbGQobW9kdWxlKTtcbiAgYm9keS5hcHBlbmRDaGlsZChtb2R1bGVCYWNrZ3JvdW5kKTtcbn1cblxuZXhwb3J0IHsgcmVuZGVyTW9kdWxlTWV0YURlc2NyaXB0aW9uLCBtZXRhRGVzY3JpcHRpb25TdHJpbmcgfTtcbiIsImltcG9ydCB7IGNyZWF0ZU5ld0VsZW1lbnQgfSBmcm9tIFwiLi5cIjtcbmltcG9ydCB7IHRoZUNvbXBhbnlOYW1lIH0gZnJvbSBcIi4va2V5d29yZE1vZHVsZVwiO1xuaW1wb3J0IHsgYWxsS2V5d29yZHMgfSBmcm9tIFwiLi9rZXl3b3JkTW9kdWxlXCI7XG5pbXBvcnQgeyBtZXRhRGVzY3JpcHRpb25TdHJpbmcgfSBmcm9tIFwiLi9tZXRhRGVzY3JpcHRpb25cIjtcbmltcG9ydCB7IHNlYXJjaFN0cmluZyB9IGZyb20gXCIuL3NlYXJjaERvY3VtZW50TW9kdWxlXCI7XG5cbi8vICBmdW5jdGlvbiB0byBjb3B5IGFycmF5IGFuZCBiZSBhYmxlIHRvIGFsdGVyIHRoZSBzZWNvbmQgYXJyYXkgd2l0aG91dCBhbHRlcmluZyB0aGUgZmlyc3QuXG5mdW5jdGlvbiBjb3B5KGFPYmplY3QpIHtcbiAgbGV0IGJPYmplY3QgPSBBcnJheS5pc0FycmF5KGFPYmplY3QpID8gW10gOiB7fTtcbiAgbGV0IHZhbHVlO1xuICBmb3IgKGNvbnN0IGtleSBpbiBhT2JqZWN0KSB7XG4gICAgdmFsdWUgPSBhT2JqZWN0W2tleV07XG4gICAgYk9iamVjdFtrZXldID0gdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiID8gY29weSh2YWx1ZSkgOiB2YWx1ZTtcbiAgfVxuICByZXR1cm4gYk9iamVjdDtcbn1cblxuLy8gY2hlY2sgdG8gc2VlIGlmIHRoZXJlIHdlcmUgYW55IGZpbGxlciB3b3JkcyB1c2VkIGluYmV0d2VlbiB0aGUga2V5d29yZHNcbmZ1bmN0aW9uIGNoZWNrRm9yRmlsbGVyV29yZHMoKSB7XG4gIGxldCBrZXl3b3Jkc1dpdGhGaWxsZXJzID0gYWRkRmlsbGVyUmVnZXgoKTtcbiAgbGV0IG1hdGNoZXMgPSBbXTtcbiAga2V5d29yZHNXaXRoRmlsbGVycy5mb3JFYWNoKChrZXl3b3JkKSA9PiB7XG4gICAgY29uc3QgcmVnRXggPSBuZXcgUmVnRXhwKGAke2tleXdvcmR9YCwgXCJnbWlcIik7XG4gICAgbGV0IG5ld01hdGNoZXMgPSBzZWFyY2hTdHJpbmcubWF0Y2gocmVnRXgpO1xuICAgIGlmIChuZXdNYXRjaGVzID09PSBudWxsKSB7XG4gICAgICBuZXdNYXRjaGVzID0gW107XG4gICAgfVxuICAgIG1hdGNoZXMucHVzaChuZXdNYXRjaGVzLmxlbmd0aCk7XG4gIH0pO1xuICByZXR1cm4gbWF0Y2hlcztcbn1cbi8vIGFkZHMgZmlsbGVyIHdvcmQgcmVnZXggaW50byB0aGUga2V5d29yZHNcbmZ1bmN0aW9uIGFkZEZpbGxlclJlZ2V4KCkge1xuICBsZXQga2V5d29yZHNXaXRoRmlsbGVycyA9IFtdO1xuICBhbGxLZXl3b3Jkcy5mb3JFYWNoKChrZXl3b3JkKSA9PiB7XG4gICAgbGV0IHRoaXNLZXl3b3JkID0ga2V5d29yZC5uYW1lO1xuICAgIGxldCB0aGlzS2V5d29yZEFycmF5ID0gdGhpc0tleXdvcmQuc3BsaXQoXCIgXCIpO1xuICAgIGNvbnN0IGtleXdvcmRBcnJheUxlbmd0aCA9IHRoaXNLZXl3b3JkQXJyYXkubGVuZ3RoO1xuICAgIGlmIChrZXl3b3JkQXJyYXlMZW5ndGggPT09IDEpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IGtleXdvcmRBcnJheUxlbmd0aCAtIDE7IGkgPiAwOyBpLS0pIHtcbiAgICAgIHRoaXNLZXl3b3JkQXJyYXkuc3BsaWNlKGksIDAsIGAoXFxcXGJcXFxcd3swLDI1fVxcXFxiKT9gKTtcbiAgICB9XG4gICAga2V5d29yZHNXaXRoRmlsbGVycy5wdXNoKHRoaXNLZXl3b3JkQXJyYXkuam9pbihcIlxcXFxzP1wiKSk7XG4gIH0pO1xuICByZXR1cm4ga2V5d29yZHNXaXRoRmlsbGVycztcbn1cblxuLy8gaWYgYW55IGtleXdvcmRzIGNvbnRhaW4gdGhlIHNhbWUgcGhyYXNlIGFzIGFub3RoZXIga2V5d29yZCB0aGlzIGZ1bmN0aW9uIHdpbGwgc3VidHJhY3QgdGhlIGV4dHJ0YSBtYXRjaGVzIG91dC5cbmZ1bmN0aW9uIHJlbW92ZUR1cGxpY2F0ZXMoYXJyYXkpIHtcbiAgbGV0IHJldHVybmVkQXJyYXkgPSBjb3B5KGFycmF5KTtcbiAgbGV0IGlubmVyQXJyYXlJbmRleCA9IDA7XG4gIGFycmF5LmZvckVhY2goKGlubmVyQXJyYXkpID0+IHtcbiAgICBpZiAoaW5uZXJBcnJheSA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoYXJyYXlbaV0gPT09IG51bGwpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAoaW5uZXJBcnJheVswXSAhPT0gYXJyYXlbaV1bMF0pIHtcbiAgICAgICAgY29uc3QgcmVnRXggPSBuZXcgUmVnRXhwKGAke2lubmVyQXJyYXlbMF19YCwgXCJnbWlcIik7XG4gICAgICAgIGlmIChyZWdFeC50ZXN0KGFycmF5W2ldWzBdKSkge1xuICAgICAgICAgIGxldCBudW1Ub1NwbGljZSA9IGFycmF5W2ldLmxlbmd0aDtcbiAgICAgICAgICByZXR1cm5lZEFycmF5W2lubmVyQXJyYXlJbmRleF0uc3BsaWNlKDAsIG51bVRvU3BsaWNlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBpbm5lckFycmF5SW5kZXgrKztcbiAgfSk7XG4gIHJldHVybiByZXR1cm5lZEFycmF5O1xufVxuXG4vLyB1cGRhdGVzIGtleXdvcmQgY2xhc3NlcyB3aXRoIHByb3BlciBudW1iZXIgb2YgbWF0Y2hlc1xuZnVuY3Rpb24gYWRkTnVtYmVyT2ZNYXRjaGVzVG9LZXl3b3JkQ2xhc3NlcyhhcnJheSkge1xuICBsZXQgYXJyYXlJbmRleCA9IDA7XG4gIGFsbEtleXdvcmRzLmZvckVhY2goKGtleXdvcmQpID0+IHtcbiAgICBpZiAoYXJyYXlbYXJyYXlJbmRleF0ubGVuZ3RoID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGtleXdvcmQubWF0Y2hlcyA9IDA7XG4gICAgfSBlbHNlIHtcbiAgICAgIGtleXdvcmQubWF0Y2hlcyA9IGFycmF5W2FycmF5SW5kZXhdLmxlbmd0aDtcbiAgICB9XG4gICAgYXJyYXlJbmRleCsrO1xuICB9KTtcbn1cblxuLy8gc2VhcmNoZXMgZm9yIG1hdGNoZXMgYW5kIHJldHVybnMgYW4gYXJyYXkgd2l0aCBhbGwgdGhlIG1hdGNoZXNcbmZ1bmN0aW9uIHNlYXJjaEZvcktleXdvcmRzKCkge1xuICBjb25zdCBtYXRjaGVzID0gW107XG4gIGFsbEtleXdvcmRzLmZvckVhY2goKGVsZW1lbnQpID0+IHtcbiAgICBjb25zdCB0aGlzUmVnZXggPSBuZXcgUmVnRXhwKGAke2VsZW1lbnQua2V5d29yZH1gLCBgZ21pYCk7XG4gICAgY29uc3QgbmV3TWF0Y2hlcyA9IHNlYXJjaFN0cmluZy5tYXRjaCh0aGlzUmVnZXgpO1xuICAgIG1hdGNoZXMucHVzaChuZXdNYXRjaGVzKTtcbiAgfSk7XG4gIGxldCByZW1vdmVkTWF0Y2hlcyA9IHJlbW92ZUR1cGxpY2F0ZXMobWF0Y2hlcyk7XG4gIGFkZE51bWJlck9mTWF0Y2hlc1RvS2V5d29yZENsYXNzZXMocmVtb3ZlZE1hdGNoZXMpO1xuICByZXR1cm4gbWF0Y2hlcztcbn1cblxuLy8gc2VhcmNoZXMgZm9yIG1hdGNoZXMgb2YgdGhlIGNvbXBhbnkgbmFtZVxuZnVuY3Rpb24gc2VhcmNoRm9yQ29tcGFueU5hbWUoKSB7XG4gIGNvbnN0IHRoaXNyZWdFeCA9IG5ldyBSZWdFeHAoYCR7dGhlQ29tcGFueU5hbWUubmFtZX1gLCBcImdtaVwiKTtcbiAgbGV0IG1hdGNoZXMgPSBzZWFyY2hTdHJpbmcubWF0Y2godGhpc3JlZ0V4KTtcbiAgaWYgKG1hdGNoZXMgPT09IG51bGwpIHtcbiAgICBtYXRjaGVzID0gMDtcbiAgfVxuICByZXR1cm4gbWF0Y2hlcztcbn1cblxuLy8gd29yZCBjb3VudGluZyBmdW5jdGlvblxuZnVuY3Rpb24gd29yZENvdW50ZXIoKSB7XG4gIHJldHVybiBzZWFyY2hTdHJpbmcubWF0Y2goL1xcYlxcUytcXGIvZyB8fCBbXSkubGVuZ3RoO1xufVxuXG4vLyBjaGFyYWN0ZXIgY291bnRpbmcgZnVuY3Rpb24gZm9yIG1ldGEgZGVzY3JpcHRpb25cbmZ1bmN0aW9uIGNoYXJhY3RlckNvdW50ZXIoc3RyaW5nKSB7XG4gIGNvbnN0IGFycmF5ID0gc3RyaW5nLnNwbGl0KFwiXCIpO1xuICByZXR1cm4gYXJyYXkubGVuZ3RoO1xufVxuLy8gZnVuY3Rpb24gdG8gcmVtb3ZlIHRoZSBtYXRjaGVzIHRoYXQgd2VyZSBmb3VuZCB3aXRob3V0IGZpbGxlciB3b3JkcyBmcm9tIHRoZSBmaWxsZXIgd29yZCBsaXN0LlxuZnVuY3Rpb24gc3VidHJhY3RBY3R1YWxNYXRjaEZyb21GaWxsZXJzKGFjdHVhbE1hdGNoQXJyYXksIEZpbGxlck51bUFycmF5KSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYWN0dWFsTWF0Y2hBcnJheS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChhY3R1YWxNYXRjaEFycmF5W2ldID09PSBudWxsKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgRmlsbGVyTnVtQXJyYXlbaV0gLT0gYWN0dWFsTWF0Y2hBcnJheVtpXS5sZW5ndGg7XG4gIH1cbiAgcmV0dXJuIEZpbGxlck51bUFycmF5O1xufVxuXG4vLyByZW5kZXJzIHRoZSByZXN1bHRzIHdoZW4gdGhlIGJ1dHRvbiBpcyBjbGlja2VkXG5mdW5jdGlvbiByZW5kZXJSZXN1bHRzKCkge1xuICBjb25zdCBtYXRjaGVzRm91bmRMaXN0ID0gc2VhcmNoRm9yS2V5d29yZHMoKTtcbiAgbGV0IGZpbGxlck1hdGNoZXNDb3VudCA9IGNoZWNrRm9yRmlsbGVyV29yZHMoKTtcbiAgbGV0IGZpbGxlck1hdGNoZXNMZXNzQWN0dWFsTWF0Y2hlcyA9IHN1YnRyYWN0QWN0dWFsTWF0Y2hGcm9tRmlsbGVycyhcbiAgICBtYXRjaGVzRm91bmRMaXN0LFxuICAgIGZpbGxlck1hdGNoZXNDb3VudFxuICApO1xuICBsZXQgY29tcGFueU5hbWVNYXRjaGVzID0gc2VhcmNoRm9yQ29tcGFueU5hbWUoKTtcbiAgY29uc3QgbnVtT2ZXb3JkcyA9IHdvcmRDb3VudGVyKCk7XG4gIGNvbnN0IG1ldGFDaGFyTGVuZ3RoID0gY2hhcmFjdGVyQ291bnRlcihtZXRhRGVzY3JpcHRpb25TdHJpbmcpO1xuICBmaWxsZXJNYXRjaGVzTGVzc0FjdHVhbE1hdGNoZXMuc3BsaWNlKFxuICAgIDAsXG4gICAgMCxcbiAgICBcIkFkZGl0aW9uYWwgVGltZXMgVXNlZCBXaXRoIGEgRmlsbGVyIFdvcmRcIlxuICApO1xuICBjb25zdCBrZXl3b3JkQXJyYXkgPSBbXCJLZXl3b3JkIFVzZWRcIl07XG4gIGNvbnN0IGtleXdvcmRSZXN1bHRBcnJheSA9IFtcIk51bWJlciBvZiBUaW1lcyBVc2VkIEluZGVwZW5kZW50bHlcIl07XG4gIGFsbEtleXdvcmRzLmZvckVhY2goKGtleXdvcmQpID0+IHtcbiAgICBrZXl3b3JkQXJyYXkucHVzaChrZXl3b3JkLm5hbWUpO1xuICAgIGtleXdvcmRSZXN1bHRBcnJheS5wdXNoKGtleXdvcmQubWF0Y2hlcyk7XG4gIH0pO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJlc3VsdHNQYXJhZ3JhcGhLZXl3b3Jkc1wiKS50ZXh0Q29udGVudCA9XG4gICAga2V5d29yZEFycmF5LmpvaW4oXCJcXHJcXG5cIik7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmVzdWx0c1BhcmFncmFwaE51bWJlcnNcIikudGV4dENvbnRlbnQgPVxuICAgIGtleXdvcmRSZXN1bHRBcnJheS5qb2luKFwiXFxyXFxuXCIpO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAgIFwiLnJlc3VsdHNQYXJhZ3JhcGhDb21wYW55TmFtZVwiXG4gICkudGV4dENvbnRlbnQgPSBgQ29tcGFueSBOYW1lOiAqJHt0aGVDb21wYW55TmFtZS5uYW1lfSogaXMgdXNlZCAke2NvbXBhbnlOYW1lTWF0Y2hlcy5sZW5ndGh9IHRpbWVzYDtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICBcIi5yZXN1bHRzUGFyYWdyYXBoV29yZENvdW50XCJcbiAgKS50ZXh0Q29udGVudCA9IGBXb3JkQ291bnQgZm9yIHRoZSBkb2N1bWVudCBpczogJHtudW1PZldvcmRzfWA7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgXCIucmVzdWx0c1BhcmFncmFwaE1ldGFDaGFyc1wiXG4gICkudGV4dENvbnRlbnQgPSBgVGhlIE1ldGEgRGVzY3JpcHRpb24gY29udGFpbnM6ICR7bWV0YUNoYXJMZW5ndGh9IGNoYXJhY3RlcnMuYDtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXN1bHRzUGFyYWdyYXBoRmlsbGVyTnVtYmVyc1wiKS50ZXh0Q29udGVudCA9XG4gICAgZmlsbGVyTWF0Y2hlc0xlc3NBY3R1YWxNYXRjaGVzLmpvaW4oXCJcXHJcXG5cIik7XG59XG5cbi8vIGFkZHMgdGhlIGV2ZW50IGxpc3RlbmVyIHRvIHRoZSByZXN1bHQgYnV0dG9uXG5mdW5jdGlvbiByZXN1bHRMaXN0ZW5lcihidG4pIHtcbiAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCByZW5kZXJSZXN1bHRzKTtcbn1cblxuLy8gZXhwb3J0IGZ1bmN0aW9uIHRvIGFkZCB0aGUgcmVzdWx0IGJ1dHRvbiB0byB0aGUgZGl2IGl0IGJlbG9uZ3MgaW5cbmZ1bmN0aW9uIGFkZFJlc3VsdHNCdG4oKSB7XG4gIGNvbnN0IHJlc3VsdEJ0biA9IGNyZWF0ZU5ld0VsZW1lbnQoXG4gICAgXCJidXR0b25cIixcbiAgICBcInJlc3VsdEJ0blwiLFxuICAgIFwiQ2xpY2sgbWUgZm9yIHRoZSByZXN1bHRzIVwiXG4gICk7XG4gIHJlc3VsdExpc3RlbmVyKHJlc3VsdEJ0bik7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmVzdWx0QnRuRGl2XCIpLmFwcGVuZENoaWxkKHJlc3VsdEJ0bik7XG59XG5cbmV4cG9ydCB7IGFkZFJlc3VsdHNCdG4gfTtcbiIsImltcG9ydCBcIi4vc3R5bGUuc2Nzc1wiO1xuaW1wb3J0IHsgcmVuZGVyTW9kdWxlIH0gZnJvbSBcIi4vc2NyaXB0cy9rZXl3b3JkTW9kdWxlXCI7XG5pbXBvcnQgeyByZW5kZXJNb2R1bGVTZWFyY2ggfSBmcm9tIFwiLi9zY3JpcHRzL3NlYXJjaERvY3VtZW50TW9kdWxlXCI7XG5pbXBvcnQgeyBhZGRSZXN1bHRzQnRuIH0gZnJvbSBcIi4vc2NyaXB0cy9yZXN1bHRzXCI7XG5pbXBvcnQgeyByZW5kZXJNb2R1bGVNZXRhRGVzY3JpcHRpb24gfSBmcm9tIFwiLi9zY3JpcHRzL21ldGFEZXNjcmlwdGlvblwiO1xuXG5jb25zdCBkaXNwbGF5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkaXNwbGF5XCIpO1xuY29uc3QgYnV0dG9uQXJlYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29tbWFuZEJ0bnNcIik7XG5cbi8vIHJlbmRlcnMgdGhlIG1vZHVsZSB0byBhZGQga2V5d29yZHNcbmZ1bmN0aW9uIG9wZW5Nb2R1bGVBZGRLZXl3b3JkcygpIHtcbiAgcmVuZGVyTW9kdWxlKCk7XG59XG4vLyByZW5kZXJzIHRoZSBtb2R1bGUgdG8gYWRkIHNlYXJjaCBkb2N1bWVudFxuZnVuY3Rpb24gb3Blbk1vZHVsZVNlYXJjaERvY3VtZW50KCkge1xuICByZW5kZXJNb2R1bGVTZWFyY2goKTtcbn1cblxuLy8gcmVuZGVycyB0aGUgbW9kdWxlIHRvIGFkZCBtZXRhIGRlc2NyaXB0aW9uXG5mdW5jdGlvbiBvcGVuTW9kdWxlTWV0YURlc2NyaXB0aW9uKCkge1xuICByZW5kZXJNb2R1bGVNZXRhRGVzY3JpcHRpb24oKTtcbn1cblxuLy8gYWRkcyBldmVudCBsaXN0ZW5lciB0byBvcGVuIG1vZHVsZSB0byBhZGQga2V5d29yZHMgdG8gc2FpZCBidXR0b25cbmZ1bmN0aW9uIG1vZHVsZUJ0bkV2ZW50TGlzdGVuZXIoQnRuKSB7XG4gIEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb3Blbk1vZHVsZUFkZEtleXdvcmRzKTtcbn1cblxuLy8gYWRkcyBldmVudCBsaXN0ZW5lciB0byBvcGVuIG1vZHVsZSB0byBhZGQgdGhlIGRvY3VtZW50IHRvIHNlYXJjaFxuZnVuY3Rpb24gc2VhcmNoRG9jdW1lbnRCdG5MaXN0ZW5lcihCdG4pIHtcbiAgQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvcGVuTW9kdWxlU2VhcmNoRG9jdW1lbnQpO1xufVxuLy8gYWRkcyBldmVudCBsaXN0ZW5lciB0byBvcGVuIG1vZHVsZSB0byBhZGQgbWV0YSBkZXNjcmlwdGlvblxuZnVuY3Rpb24gbWV0YURlc2NyaXB0aW9uQnRuTGlzdGVuZXIoQnRuKSB7XG4gIEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb3Blbk1vZHVsZU1ldGFEZXNjcmlwdGlvbik7XG59XG5cbi8vIGZ1bmN0aW9uIHRvIGVhc2lseSBjcmVhdGUgbmV3IGVsZW1lbnRzIHdpdGggY2xhc3NlcyBhbmQgaW5uZXIgSFRNTFxuZnVuY3Rpb24gY3JlYXRlTmV3RWxlbWVudCh0eXBlLCBhZGRDbGFzcywgaW5uZXJIVE1MKSB7XG4gIGNvbnN0IGRvbUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHR5cGUpO1xuICBkb21FbGVtZW50LmNsYXNzTGlzdC5hZGQoYWRkQ2xhc3MpO1xuICBkb21FbGVtZW50LmlubmVySFRNTCA9IGlubmVySFRNTDtcbiAgcmV0dXJuIGRvbUVsZW1lbnQ7XG59XG5cbi8vIGNyZWF0ZXMgdGhlIGFkZCBtb2R1bGUgYnV0dG9uIGZvciBrZXl3b3Jkc1xuZnVuY3Rpb24gYWRkTW9kdWxlQnRuKCkge1xuICBjb25zdCBtb2R1bGVCdG4gPSBjcmVhdGVOZXdFbGVtZW50KFxuICAgIFwiYnV0dG9uXCIsXG4gICAgXCJtb2R1bGVCdG5cIixcbiAgICBcIkNsaWNrIG1lIHRvIGFkZCBrZXl3b3JkcyFcIlxuICApO1xuICBtb2R1bGVCdG5FdmVudExpc3RlbmVyKG1vZHVsZUJ0bik7XG4gIGJ1dHRvbkFyZWEuYXBwZW5kQ2hpbGQobW9kdWxlQnRuKTtcbn1cblxuLy8gY3JlYXRlcyB0aGUgYWRkIG1vZHVsZSBidXR0b24gZm9yIGRvY3VtZW50IHRvIHNlYXJjaCB0aHJvdWdoXG5mdW5jdGlvbiBhZGRNb2R1bGVCdG5TZWFyY2hEb2N1bWVudCgpIHtcbiAgY29uc3QgbW9kdWxlQnRuID0gY3JlYXRlTmV3RWxlbWVudChcbiAgICBcImJ1dHRvblwiLFxuICAgIFwibW9kdWxlQnRuXCIsXG4gICAgXCJDbGljayBtZSB0byBhZGQgdGV4dCB0byBzZWFyY2ghXCJcbiAgKTtcbiAgc2VhcmNoRG9jdW1lbnRCdG5MaXN0ZW5lcihtb2R1bGVCdG4pO1xuICBidXR0b25BcmVhLmFwcGVuZENoaWxkKG1vZHVsZUJ0bik7XG59XG5cbi8vIGNyZWF0ZXMgdGhlIGFkZCBtZXRhIGRlc2NyaXB0aW9uIGJ1dHRvblxuZnVuY3Rpb24gYWRkTW9kdWxlQnRuTWV0YURlc2NyaXB0aW9uKCkge1xuICBjb25zdCBtb2R1bGVCdG4gPSBjcmVhdGVOZXdFbGVtZW50KFxuICAgIFwiYnV0dG9uXCIsXG4gICAgXCJtb2R1bGVCdG5cIixcbiAgICBcIkNsaWNrIG1lIHRvIGFkZCB0aGUgTWV0YSBEZXNjcmlwdGlvbiFcIlxuICApO1xuICBtZXRhRGVzY3JpcHRpb25CdG5MaXN0ZW5lcihtb2R1bGVCdG4pO1xuICBidXR0b25BcmVhLmFwcGVuZENoaWxkKG1vZHVsZUJ0bik7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZU5ld0VsZW1lbnQgfTtcblxuYWRkTW9kdWxlQnRuKCk7XG5hZGRNb2R1bGVCdG5TZWFyY2hEb2N1bWVudCgpO1xuYWRkUmVzdWx0c0J0bigpO1xuYWRkTW9kdWxlQnRuTWV0YURlc2NyaXB0aW9uKCk7XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwia2V5d29yZCIsImNvbnN0cnVjdG9yIiwibmFtZSIsIm51bWJlck9mTWF0Y2hlcyIsIm1hdGNoZXMiLCJudW0iLCJtYXRjaFN0cmluZyIsInRoZUNvbXBhbnlOYW1lIiwiYWxsS2V5d29yZHMiLCJib2R5IiwiYm9keUtleXdvcmRzIiwiY3JlYXRlQnV0dG9uIiwiYnRuIiwiY3JlYXRlTmV3RWxlbWVudCIsInRleHRDb250ZW50IiwiY2xpY2tlZE9rIiwibmV3S2V5d29yZHMiLCJnZXRFbGVtZW50QnlJZCIsInZhbHVlIiwic3BsaXQiLCJrZXl3b3Jkc0FycmF5IiwicmVnRXgiLCJtYXRjaCIsInJlbW92ZUJsYW5rS2V5d29yZHMiLCJrZXl3b3JkQXJyYXkiLCJuZXdBcnJheSIsImZvckVhY2giLCJrZXl3b3JkTGlzdGVkIiwia2V5d29yZENsYXNzIiwia2V5d29yZENsYXNzZXMiLCJvYmplY3RBcnJheSIsImtleXdvcmROYW1lQXJyYXkiLCJqdXN0S2V5d29yZE5hbWVzIiwiZm9ybWF0S2V5d29yZHMiLCJjb21wYW55TmFtZSIsImZvcm1hdENvbXBhbnlOYW1lIiwiY2xpY2tlZENhbmNlbCIsIm1vZHVsZUJhY2tncm91bmQiLCJzZWFyY2hCb2R5Iiwic2VhcmNoU3RyaW5nIiwic2VhcmNoVGV4dEFyZWEiLCJtZXRhQm9keSIsIm1ldGFEZXNjcmlwdGlvblN0cmluZyIsImNvcHkiLCJhT2JqZWN0IiwiYk9iamVjdCIsIkFycmF5IiwiaXNBcnJheSIsInJlbW92ZUR1cGxpY2F0ZXMiLCJhcnJheSIsInJldHVybmVkQXJyYXkiLCJpbm5lckFycmF5SW5kZXgiLCJpbm5lckFycmF5IiwiUmVnRXhwIiwidGVzdCIsIm51bVRvU3BsaWNlIiwicmVuZGVyUmVzdWx0cyIsImZpbGxlck1hdGNoZXNMZXNzQWN0dWFsTWF0Y2hlcyIsImFjdHVhbE1hdGNoQXJyYXkiLCJGaWxsZXJOdW1BcnJheSIsInN1YnRyYWN0QWN0dWFsTWF0Y2hGcm9tRmlsbGVycyIsInRoaXNSZWdleCIsIm5ld01hdGNoZXMiLCJhcnJheUluZGV4IiwiYWRkTnVtYmVyT2ZNYXRjaGVzVG9LZXl3b3JkQ2xhc3NlcyIsInNlYXJjaEZvcktleXdvcmRzIiwia2V5d29yZHNXaXRoRmlsbGVycyIsInRoaXNLZXl3b3JkQXJyYXkiLCJrZXl3b3JkQXJyYXlMZW5ndGgiLCJhZGRGaWxsZXJSZWdleCIsImNoZWNrRm9yRmlsbGVyV29yZHMiLCJjb21wYW55TmFtZU1hdGNoZXMiLCJ0aGlzcmVnRXgiLCJzZWFyY2hGb3JDb21wYW55TmFtZSIsIm51bU9mV29yZHMiLCJtZXRhQ2hhckxlbmd0aCIsImtleXdvcmRSZXN1bHRBcnJheSIsImJ1dHRvbkFyZWEiLCJvcGVuTW9kdWxlQWRkS2V5d29yZHMiLCJidXR0b25zIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9rQnV0dG9uIiwiY2FuY2VsQnV0dG9uIiwicmVuZGVyTW9kdWxlIiwib3Blbk1vZHVsZVNlYXJjaERvY3VtZW50IiwicmVuZGVyTW9kdWxlU2VhcmNoIiwib3Blbk1vZHVsZU1ldGFEZXNjcmlwdGlvbiIsInJlbmRlck1vZHVsZU1ldGFEZXNjcmlwdGlvbiIsInR5cGUiLCJhZGRDbGFzcyIsImlubmVySFRNTCIsImRvbUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJtb2R1bGVCdG4iLCJhZGRNb2R1bGVCdG4iLCJhZGRNb2R1bGVCdG5TZWFyY2hEb2N1bWVudCIsInJlc3VsdEJ0biIsImFkZFJlc3VsdHNCdG4iLCJhZGRNb2R1bGVCdG5NZXRhRGVzY3JpcHRpb24iXSwic291cmNlUm9vdCI6IiJ9